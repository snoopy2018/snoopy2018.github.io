<svg id="svg5" version="1.1" viewBox="0 0 243.41664 195.79168" height="740" width="920" xmlns="http://www.w3.org/2000/svg"><defs id="defs2"><clipPath clipPathUnits="userSpaceOnUse" id="clipPath2172"><path id="path2174" style="fill:red;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:.264583" d="M131.56509 3.3150432V72.379562h81.69941V3.3150432Zm4.36201 16.0920408c.90316.005 1.24567 1.992801 1.69757 3.526917 1.38773-.09413 2.44301.03435 1.80248 1.330667-.0295.05978-.0603.119182-.093.177251.0712-.05652.14509-.12368.22221-.202055.0199-.02025.0335-.05035.0599-.06098.0322-.013-.0466.05164-.0692.07803-.0775.09058-.15667.179401-.23617.268201.002-.0015.008-.0068.006-.0047-.0547.07266-.11513.141074-.17364.21084.0714-.0912.13395-.188616.19069-.289388-.89253.708171-1.338-.246928-1.70946-1.507918-2.0517.139166-4.83014.765391-3.93102-1.174089.14692-.316901.30789-.627864.53227-.898653.14627-.180666.29478-.359228.44648-.535368.16072-.162369.29164-.354316.4594-.510563h.00053c.30731-.286234.56849-.409495.79479-.408244zm-.0827 9.120892c1.96001-.0066 4.16793 1.747861 3.39721 3.969781-.16417.473298-.32598.947127-.48834 1.421104-.12545.371398-.0636.187566-.18604.552421-1.13996 3.397544-7.07208 1.406909-5.93194-1.990577.12955-.385926.0632-.189682.19844-.589629.19647-.57353.38899-1.148429.59893-1.717207.42658-1.155679 1.38506-1.642411 2.41174-1.645893z"/></clipPath><filter style="color-interpolation-filters:sRGB" id="filter1095" x="-.06505849" y="-.07641596" width="1.1301171" height="1.1528319"><feGaussianBlur stdDeviation=".01" result="blur" id="feGaussianBlur1089"/><feComposite in="SourceGraphic" in2="blur" operator="in" result="composite1" id="feComposite1091"/><feComposite in="composite1" in2="composite1" operator="in" result="fbSourceGraphic" id="feComposite1093"/><feColorMatrix result="fbSourceGraphicAlpha" in="fbSourceGraphic" values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0" id="feColorMatrix1115"/><feGaussianBlur id="feGaussianBlur1117" stdDeviation="1.71" result="blur" in="fbSourceGraphic"/><feComposite in2="blur" id="feComposite1119" in="fbSourceGraphic" operator="in" result="composite1"/><feComposite in2="composite1" id="feComposite1121" in="composite1" operator="in" result="composite2"/></filter><path id="rect36013" d="M712.10175 315.47656h136.15944v44.981243H712.10175z"/></defs><g id="layer5" style="display:inline"><path style="fill:#fff;stroke:none;stroke-width:.443256;-inkscape-stroke:none;stop-color:#000" id="rect2071" d="M-15.822089-12.657673h283.19583v234.95329h-283.19583z"/></g><g id="g1131" style="display:inline" transform="translate(.61359839 -3.4077051)"><g id="g1041" transform="translate(-8.7594969 4.026128)"><path style="display:inline;fill:#000;stroke-width:.529167" d="M136.16414 190.58128c0-.29104.25218-.52916.5604-.52916s.41322.23812.23335.52916c-.17988.29104-.43206.52917-.5604.52917s-.23335-.23813-.23335-.52917zm-27.51668-.38892c0-.28369 2.78666-.67071 6.21772-.86354 13.37969-.75195 16.53646-1.03238 16.53646-1.46902 0-.24943-1.53928-.45352-3.42062-.45352-3.17705 0-6.13422.2444-19.33356 1.59785-10.142431 1.03999-16.933392 1.25726-16.933392.54176 0-.36594.3156-.54423.701327-.39621.513277.19696 14.091135-.86006 15.041425-1.17095.0728-.0238.13229-.28141.13229-.57245 0-.71384-6.19424-.68017-6.63691.0361-.19214.31089-.66706.44333-1.055377.29431-.38832-.14901-.796647.001-.907377.33307-.147507.44254-.642764.42115-1.852708-.08-1.519981-.62961-7.431098-.48892-12.301831.29279-3.016776.48417-11.658907.5823-11.935026.13553-.164051-.26543.71591-.4826 1.95546-.4826 1.63908 0 2.09498-.15875 1.67165-.58208-.72667-.72667-2.51074-.69366-10.34521.19142-3.41974.38634-6.217711.53415-6.217711.32848 0-.45521 1.878011-.76165 11.08582-1.80897 3.91438-.44523 7.23226-.9247 7.373051-1.0655.91995-.91994-1.39554-1.09573-6.02345-.45728-11.20463 1.54575-12.17725 1.66129-12.39132 1.47212-.54088-.47801.76211-.75966 8.18701-1.76966 4.34966-.59169 8.3036-1.30138 8.78654-1.57709.482929-.27572 1.73894-.36161 2.791129-.19086 1.56594.25412 1.85624.48955 1.59983 1.29743-.27066.85278-.0206.98699 1.839066.98699h2.152328v-4.23333c0-2.32834.21036-4.23334.467447-4.23334.674057 0 1.104514 1.97386 1.112834 5.10276.005 1.95591.23614 2.80936.821007 3.03379.967084.37111.945364.43731 2.060678-6.28213 1.048234-6.31528 2.239495-8.32568 1.569181-2.64817-.24054 2.03729-.445787 4.77573-.456117 6.08542-.0187 2.37056-.0101 2.38173 1.908708 2.48843 1.708971.095 1.958968-.055 2.205158-1.32292.15272-.78655.237847-7.62134.189177-15.18843l-.0885-13.75833-4.076559-.26458c-2.242115-.14552-4.327683-.5166-4.634613-.82461-.306917-.30802-1.047334-1.95213-1.645341-3.65359-1.227971-3.49379-1.142684-5.61011.651247-16.1593 1.637291-9.6281 2.539385-15.22754 3.324762-20.63751.815544-5.61764 2.208318-13.376933 2.738115-15.254147.439757-1.558224 2.145355-2.20836 5.7935-2.20836 2.961652 0 3.490252-.418938 2.043538-1.619598-1.385074-1.149519-2.787495-4.403344-2.514158-5.833244.16016-.83779-.0578-1.603796-.579604-2.036842-.45997-.381739-.82874-1.081631-.81948-1.555318.0139-.712927.15535-.678985.82119.197086.781144 1.027819.880804.97835 3.456459-1.715784 1.458667-1.525765 2.497387-3.024477 2.308267-3.330472-.18912-.305995-.0705-.885759.26367-1.288366.45782-.551628.45229-1.250131-.0224-2.834571-1.37907-4.602892 1.3162-11.016377 5.3397-12.705999 1.20485-.505963 2.09538-1.241676 2.09848-1.733653.003-.470074.51303-1.500041 1.13348-2.288816.90103-1.145472 1.40696-1.36456 2.51355-1.088468 1.96052.48915 3.23753 1.797926 3.23753 3.318078 0 .716834.70435 2.105551 1.56524 3.086037 2.11768 2.411912 2.9205 5.526506 2.18125 8.462339-.92387 3.669023-.72878 6.935299.48685 8.150925.58208.582083 1.24347 1.058333 1.46975 1.058333.99143 0 2.92039-1.876491 4.85018-4.718229 2.27293-3.347043 4.28264-4.612064 8.17456-5.14551 5.65814-.775534 10.75798 3.607926 12.52963 10.769566.93348 3.773429 2.31892 4.342304 1.82476.749257-.4053-2.946869.45019-6.480223 1.88292-7.776822.51483-.465915 1.84751-.968465 2.9615-1.116777 1.78879-.238152 2.16267-.0834 3.19989 1.324447 1.9038 2.584079 2.98062 8.500715 2.64747 14.546594l-.28725 5.213084 2.466-.17593c2.19744-.15677 2.45528-.06067 2.36756.882403-.0541.582084.46022 4.153959 1.14301 7.937517.6828 3.78354 1.52032 9.02229 1.86117 11.64166.34084 2.61938 1.18116 8.21531 1.86738 12.43542.68621 4.2201 1.54048 10.49689 1.89836 13.94841.57714 5.56606.5543 6.46338-.20202 7.9375-.46899.9141-.93295 2.13826-1.03102 2.72034-.16814.99801-.53631 1.05059-6.45957.92251l-6.28127-.13583.40802 7.01499c.22441 3.85825.49385 10.825.59875 15.48166.1049 4.65667.19512 8.53948.20047 8.62847.005.089.62599-.50633 1.37917-1.32292 1.29941-1.40882 1.37378-1.18602.40545 1.21479-.24554.60878-.0877.79505.56029.66145.59019-.12166 1.35351-1.52909 2.20768-4.07054 1.47256-4.38141 3.32814-8.26457 3.74841-7.8443.15396.15396-.45796 2.65504-1.35983 5.55795-.90187 2.90291-1.63976 5.53846-1.63976 5.85677 0 .31831.83344.57875 1.85209.57875 1.4552 0 2.30565-.45357 3.96875-2.11667 2.49361-2.49362 3.15431-2.72956 1.62353-.57977-1.35856 1.90792-1.36287 2.16727-.036 2.16727 1.65831 0 1.23922.9812-.62547 1.46439-.92609.23997-1.77937.72303-1.89618 1.07346-.33112.99338 1.73598.7528 3.75198-.43667l1.82-1.07383.27016 1.73529c.14859.9544.1171 1.89325-.07 2.08633-.18707.19308-3.71164.4928-7.8324.66605-7.31772.30766-7.48581.29023-7.21433-.74793.2164-.8275.72012-1.06292 2.27429-1.06292 1.14893 0 2.50596-.41268 3.19695-.9722 1.19699-.96927 1.19099-.9723-1.98533-1.00222-3.676-.0346-4.4795.31889-4.65622 2.04858-.0702.68681-.15798 1.3767-.19513 1.53307-.0371.15638-.78191.33875-1.65503.40528-1.2789.0975-1.5875-.0864-1.5875-.94578 0-1.25905-.45032-1.36433-1.26458-.29567-.32846.43108-1.81247.87983-3.36563 1.01774-2.47392.21967-2.77812.13523-2.77812-.77106 0-.55976-.23813-1.01774-.52917-1.01774s-.52917.23812-.52917.52917c0 .3061-1.6861.52916-3.99998.52916-2.5319 0-3.87994-.19421-3.67293-.52916.17987-.29105 1.74174-.52917 3.47081-.52917 2.0044 0 3.14377-.2191 3.14377-.60455 0-.4246-.96822-.50335-3.25262-.26459-1.78895.18698-4.18425.33997-5.3229.33997-1.1824 0-1.93614.21703-1.75751.50606.17201.27833.63823.38116 1.03603.2285.39781-.15264.86964-.0407 1.04853.24873.402.65045-2.88873 1.01372-12.65361 1.39687-4.07459.15988-9.37287.43228-11.77397.60535-2.68825.19377-4.36563.11714-4.36563-.19943zm44.25697-1.98827c1.695-1.695-1.28994-2.63089-3.27769-1.02767-.98598.79523-.96881.8194.42802.60254.9855-.15299 1.45521.007 1.45521.49445 0 .93207.41363.91151 1.39446-.0693zm-71.341609-1.0437c-.96898-.80943-2.53664-1.26014-2.81521-.8094-.35911.58106 1.84479 1.62204 2.55063 1.20475.23764-.14049.35671-.3184.26458-.39535zm32.085269.25311c.62807-.004.83515-.19209.52917-.47963-.64383-.60502-3.94229-.10788-3.94229.59419 0 .29225.53512.38742 1.19062.21175.65485-.17549 1.65497-.32233 2.2225-.32631zm-27.738399-.80097c-.0246-.79152-2.273028-.63859-2.543565.17301-.16351.49053.18702.65003 1.162984.52916.768374-.0951 1.389631-.41113 1.380581-.70217zm36.594279-.98274c.84921-1.5946 2.17299-2.49368 2.78579-1.89205.31683.31105.26791.72834-.13229 1.12854-1.1189 1.1189-.69136 1.48167 1.74625 1.48167 2.23623 0 3.05098-.58196 1.85209-1.32292-.29105-.17987-.52917-1.02736-.52917-1.88331 0-2.22678 1.37452-1.99237 2.51037.4281 1.39779 2.97867 3.07403 2.91774 5.40579-.1965 1.9828-2.64816 2.96764-2.32262 1.06347.35155-.63667.89412-1.00113 1.78214-.8099 1.97337.75987.75987 2.23833-.9046 4.0011-4.50448 1.01865-2.08023 2.04147-3.79562 2.27294-3.81195.58005-.0409-.13055 3.60905-1.05976 5.44344-.86055 1.69884-.64802 2.3733.36371 1.15424.36815-.4436.91912-.80654 1.22436-.80654.30525 0 .99047-.39409 1.52271-.87577 1.32331-1.19758 1.22779-.13212-.11762 1.312-1.32333 1.42043-.94134 2.2096 1.06952 2.2096 1.0273 0 1.93577-.50692 2.84503-1.5875 1.64342-1.95309 2.05796-2.0039 1.60436-.19664-.31042 1.2368-.24069 1.3302.62948.84323.57123-.31968.98768-1.15454 1.00046-2.00562.0334-2.22458 1.07513-2.09383 1.99602.25053.67625 1.72158 1.02341 2.04497 1.93838 1.80571 1.01873-.26641 1.11458-.6637 1.11458-4.61966v-4.32818l-18.65313-.0138c-32.65704-.0241-40.308905-.18947-39.641601-.85678.670477-.67047 56.749841-.58917 57.892261-.38943.4163.0728.42282-8.02727-.147-20.91645-.0434-.98221 1.50138 1.43809.32586 1.37098l-1.35355.12778-18.37678-.13988c-10.12586.0348-23.1848.0657-29.01989.0687l-10.609272.006.0259 15.29071c.0256 15.14757.0362 15.29072 1.131494 15.29075.608074.00002 1.864008-.83341 2.790968-1.85205.92695-1.01865 1.90248-1.85209 2.16784-1.85209.26536 0 1.01781-.9525 1.67212-2.11666 1.17697-2.09413 2.51088-2.9784 1.79606-1.19063-.20365.50933-.50281 2.32259-.6648 4.02949-.2924 3.08118-.28541 3.10068.97513 2.71865.69829-.21164 1.49585-.59616 1.77234-.85449.27649-.25833.99087-.47091 1.58751-.4724.59664-.002 2.03729-.58937 3.20146-1.3064 2.46895-1.52067 2.91042-1.60844 2.91042-.57863 0 .41695-.45475.90242-1.01055 1.07883-.5558.1764-1.29934.6687-1.65229 1.09399-1.15355 1.38993 1.51032.91554 2.95148-.52561.71437-.71438 1.29886-1.16424 1.29886-.99971 0 .16454.46833-.263 1.04073-.9501.83703-1.00473 1.04417-1.07539 1.05833-.361.01.48854-.33958 1.24543-.77614 1.68199-1.07163 1.07164-.99948 1.39852.30868 1.39852 1.75934 0 .86595 1.30341-1.02094 1.48948-.92899.0916-1.5833.33773-1.45401.54693.12929.20919 1.21065.28731 2.40302.1736 1.5427-.14712 2.34212-.53378 2.77183-1.34067zm-24.439898-21.93432c0-.89102 9.630058-1.26178 33.922558-1.30603 22.17573-.0404 23.50232.0103 23.67464.90484.17407.90366-.84503.92909-21.96042.54819-12.17863-.21968-22.50015-.40829-22.93672-.41912-.43656-.0109-3.47267.16222-6.74691.38455-3.79614.25778-5.953148.21704-5.953148-.11243zm58.737568 22.86045c0-.55802-.28776-.73994-.83703-.52917-.46037.17666-.95067.3212-1.08956.3212-.1389 0-.10537.23812.0745.52917.5211.84315 1.85208.61233 1.85208-.3212zm-67.733397-.20797c0-.29104-.238127-.52917-.529177-.52917-.291037 0-.529157.23813-.529157.52917s.23812.52917.529157.52917c.29105 0 .529177-.23813.529177-.52917zm5.33811-.50047c-.736867-.4554-3.828109-.053-3.512749.45723.124877.20206 1.101384.26532 2.170018.14056 1.068614-.12475 1.672848-.39376 1.342731-.59779zm9.028787-.82245c0-.27649-.25599-.58803-.56886-.69232-.31288-.1043-.56886.20725-.56886.69232 0 .48507.25598.79662.56886.69233.31287-.10429.56886-.41584.56886-.69233zm20.55817-33.33489c4.51114.002 16.52861-.18627 26.70547-.0862 15.19366.14945 18.53767.32507 18.69505-.261.10541-.39259.1511-1.01394.2656-1.38081.1145-.36685.0746-.83557.01-1.04158-.16947-.53879-82.817267-.6301-82.817267-.0918 0 .24701-.03857 1.09863.439312 2.05658l.868884 1.74173 13.815501-.4698c7.59856-.25839 17.50648-.46864 22.01763-.4672zm5.46855-5.00471 40.86398-.16424-.0173-1.13537c-.0234-1.53894-.8673-6.57481-1.89512-14.86523-.32473-2.61938-.79584-5.59594-1.04688-6.61458-.25105-1.01865-.58959-3.16178-.75232-4.76251-.71385-7.02182-1.20908-8.87011-1.65669-12.28823-.25927-1.97984-.87467-5.05196-1.05547-6.879173-.18079-1.827203-.44376-3.441251-.58436-3.586771-.1406-.145521-2.31908-.294877-4.84106-.331902-2.52198-.03703-6.83207-.205802-9.57797-.375059-4.45578-.274653-5.06592-.202977-5.67504.66667-1.1523 1.645135-4.82721 1.860362-7.88057.461538-2.39014-1.094987-3.4031-1.200688-11.61435-1.211923-5.9209-.0081-9.68614.218615-11.01536.663271-1.11074.371571-2.222.550449-2.46946.397508-.24747-.153073-.44461 2.878743-.43809 6.737251.006 3.85849-.0941 7.37263-.22369 7.80919-.12955.43656-.42358 1.74625-.65341 2.91042-.62103 3.14575-2.33528 6.05157-3.58524 6.07731-1.08346.0223-3.53111-4.48174-3.8582-7.09964-.30722-2.45895.87606-9.6728 2.04902-15.931235.18411-.982356.207-1.107095-4.371126-1.231042-2.569273-.06956-4.96147.204537-5.448248.397729-.602699.239199-1.61763 3.097224-1.997888 5.946698-.003 1.91268-1.698891 13.84593-3.750859 26.39226-.970974 5.93677-2.452173 17.15188-2.463453 18.05052.347029.11211.43566.0434 1.289711.0651.807992.0205 20.016393-.098 42.669433-.099zm-20.28524-16.00676c-10.332021-.28393-18.884683-.61418-19.005953-.7339-.751837-.7422 1.828501-.94142 12.794493-.98783 6.7633-.0286 12.58963-.23525 12.94741-.45916.35779-.22391 1.07848-.17807 1.60154.10186 1.83297.98098 23.72503 1.47542 40.18656.90763 5.9542-.20537 8.4617.21587 8.93134.28584 3.91326.583.1133.73347-.18747.91921-.88521.54666-36.9217.52549-57.26792-.0337zm4.89481-18.29925c-1.23693-.0966-2.24896-.40009-2.24896-.6744 0-.29222 3.67017-.50014 8.86354-.50213 4.87495-.002 16.60261-.1379 26.06146-.30231 12.76285-.22184 18.14092.22743 19.1339-.10953.35602-.12082.0289 1.0975.0815 1.23858.16603.44272-48.01535.65256-51.89144.34982zm-22.357362-.7084c0-.51048 2.992085-.99391 6.151577-.99391 3.035955 0 4.012565.99726 1.124471 1.14825-4.173346.2182-7.276048.15238-7.276048-.15434zm17.695802-16.425063c1.38021.109772 2.92173-.150789 3.90729-.660445.89526-.462958 2.59797-.841742 3.7838-.841742 1.82074 0 2.23535-.20859 2.66599-1.341272.28048-.7377.46679-1.511606.41403-1.719792-.0528-.208185.0914-2.245053.32024-4.526371.38269-3.814255.32757-4.230384-.68531-5.174022-1.56185-1.455083-1.90428-3.405023-1.19824-6.823292.80473-3.896142.77359-5.301967-.16729-7.553821-1.28748-3.08138-3.20038-4.222643-6.66252-3.974964-3.66487.262182-5.81556 1.700988-7.38327 4.939408-1.04197 2.152427-1.12099 2.884859-.78457 7.272348.29555 3.854444.60381 5.12842 1.46813 6.0674 1.35707 1.474312.78597 2.249425-.67993.922812-1.04486-.945587-1.10988-.931676-2.69463.576508-2.322644 2.210438-2.811231 3.284839-1.966437 4.32421.600147.738402.570537.81119-.21092.518452-2.351375-.880829-1.596271 3.301511 1.045987 5.793479 1.23471 1.164472 2.38501 1.75725 3.40999 1.75725 1.15621 0 1.52297.233823 1.45255.926042-.0518.509323-.0521 1.640417-.00063 2.513542.0874 1.482221.14639 1.429514.88988-.794765.79583-2.38087.79763-2.382158 3.07584-2.200965zm29.4001-.443854c0-.873125.23813-1.5875.52917-1.5875s.52917.483724.52917 1.074942c0 1.238864 1.39717 1.972884 2.20935 1.160707.84062-.840627-.47674-4.232836-2.04215-5.258534-1.04709-.686074-2.7614-.876842-8.15337-.907299-3.75512-.02121-6.82818-.187394-6.829-.369295-.005-1.066185 11.04824-1.370976 14.54213-.401002 2.11417.586935 3.46264 1.900012 4.00096 3.895973.31435 1.165515 1.95954 1.484261 10.40262 2.015445l4.34095.273105.32222-2.197229c.17723-1.208476.24786-3.983167.15697-6.165979l-.16527-3.96875-2.01717-.16619c-2.31984-.191126-2.43309-1.323721-.15918-1.591818 1.14397-.134876 1.4119-.411338 1.28211-1.322917-.16947-1.190215-1.35077-1.425296-3.2068-.63816-1.54733.656215-1.03408-.486827.67079-1.493919 1.65921-.980116 1.67881-1.930746.0398-1.930746-1.71578 0-2.89954 3.685686-2.50429 7.797157.18928 1.968959.49843 4.149055.687 4.844656.32934 1.21494.26153 1.250685-1.72263.907945-5.01818-.866832-4.85652-.778463-4.75237-2.597684.10821-1.890209-.75708-5.129705-1.99672-7.47541-2.50959-4.748742-7.18373-7.103122-11.82208-5.954828-2.13444.528412-2.81908 1.038485-4.38871 3.269686-1.02287 1.453983-2.83821 3.620458-4.0341 4.81439l-2.17433 2.170785-.25513 5.298035-.25511 5.298034 5.33987.432318c2.93694.237776 6.21774.43861 7.29069.446299 1.42474.01021 2.01786.270343 2.19942.964631.4294 1.642031 1.93518 1.146494 1.93518-.636848zm12.91804-11.328763c-.2248-2.480792-.13487-4.552637.2449-5.642058.72199-2.071096.41062-2.653094-.50456-.94308-.7755 1.449035-.93174 5.303881-.31321 7.727443.42576 1.668198.3891 1.719792-1.22185 1.719792-.97244 0-1.52523.219324-1.33373.529167.17987.291041 1.03729.529166 1.90538.529166h1.57833zm-39.1945-23.705419c.16792-.642133.17623-1.296603.0185-1.454376-.4149-.414897-1.80697 1.633654-1.47506 2.170684.49471.800463 1.14338.481469 1.45661-.716308zm28.57557 130.159999c.76543-.48678 5.9441-.53429 5.45989-.0501-.19519.19519-1.64106.37379-3.21305.39688-1.57198.0231-2.58306-.13297-2.24684-.34679zm36.33006-13.58132c-3.90482-.52048-2.20467-1.37573 2.73479-1.37573 4.61026 0 6.10226.43034 4.65822 1.34358-.83696.52931-3.57379.54121-7.39301.0321zM66.0694 172.62183c-.18066-.29232.0849-1.16238.59014-1.93347.815691-1.2449.95615-1.29498 1.25363-.44695.23238.66248.45359.76317.7221.3287.48592-.78623 2.78755-.82123 3.26443-.0496.4416.71453 3.73698.17485 5.37597-.88042 1.44604-.93105 2.318071-.97208 1.97973-.0932-.1898.49303.49506.6149 2.6896.47862 3.224637-.20026 5.535742.19677 5.535742.95101 0 .97842-2.093048 1.12378-3.443209.23912-1.293694-.84766-1.565241-.84785-4.603112-.003-2.15219.59836-3.404711.72116-3.75748.36839-.35277-.35277-.87093-.34625-1.55444.0195-.72497.38799-1.47023.36441-2.54439-.0805-1.30636-.54111-1.77546-.47079-3.34967.50212-1.11565.68951-1.95885.92379-2.15904.59987zm-6.10533-2.16593c0-.56288 2.20438-1.6102 2.60721-1.23872.260911.24061-1.617179 1.74296-2.210329 1.76811-.21828.009-.396881-.22897-.396881-.52939zm105.41007-.0888c-.75792-.75792-.84024-2.01084-.13213-2.01084.27658 0 .72258.3926.99111.87244.4924.87986 1.57195.85637 6.17894-.13448 2.0801-.44738 1.1676.49165-1.26959 1.30649-2.33951.78218-4.96786.76686-5.76833-.0336zm12.59417.10583c0-.29104.37124-.52917.82498-.52917.45374 0 .67781.23813.49793.52917-.17987.29104-.55111.52917-.82498.52917-.27386 0-.49793-.23813-.49793-.52917zm6.61458 0c.17987-.29104.43205-.52917.5604-.52917.12834 0 .23335.23813.23335.52917s-.25218.52917-.5604.52917-.41323-.23813-.23335-.52917zm-8.73125-1.83347c0-.83379 2.00859-2.15516 2.51152-1.65223.35557.35556-1.40641 2.42737-2.06437 2.42737-.24593 0-.44715-.34882-.44715-.77514z" id="path1129"/><path style="display:inline;fill:#e96149;fill-opacity:1;stroke:#000;stroke-width:.495059;-inkscape-stroke:none;stop-color:#000" d="M85.628574 146.56953c-.13847-.22786 1.108244-8.94207 3.236912-22.62529 1.880548-12.08829 2.643135-17.55035 2.990312-21.41825.281887-3.140514 1.017734-5.642623 1.779301-6.0502.981704-.525391 9.680061-.384514 9.698401.09935.0917.239064-.20059 2.26523-.64962 4.5026-2.07612 10.34457-1.80535 14.0421 1.335 18.23064 1.02225 1.36345 1.82611 1.34613 2.90055-.0625 2.11795-2.77677 3.10147-7.69288 3.10792-15.53479.002-2.99315-.0477-6.1922.0541-6.571216.32655-1.216472 3.81119-1.433879 14.0223-1.433879 8.90694 0 9.02483.279675 10.80622 1.089431 1.45164.659839 2.32095.818652 4.48109.818652 2.50114 0 2.74517-.06238 3.65544-.934484l.9754-.934485 8.13316.239898c4.47323.131942 8.82775.215684 9.64058.310804l1.47358.172443.64541 4.750806c.34292 2.52422.88064 5.72001 1.12677 7.11144.24613 1.39144.38253 2.58692.30312 2.65664-.0794.0697-1.24957.002-2.60034-.1515-2.66588-.30202-49.65528.21739-50.54475.55871-.75548.2899-.67104.68005.19758.91283.97842.26221 45.64034.19612 49.93818-.0739 2.15958-.13568 3.35775-.0941 3.35944.11657.009 1.0781 1.10269 9.40534 1.63481 12.44352.79412 4.53419 3.03797 21.46624 2.86733 21.63689-.19047.19047-84.452729.32926-84.568166.13929zm82.549786-15.99759c1.17058-1.17101.25467-1.02198-21.88869-1.0444-16.28471-.0165-23.68129-.29765-25.78803-.62964-3.24995-.51216-2.18624-.49786-15.71817-.21122-12.588825.26667-14.735783.41392-14.735783 1.01061 0 .32588 1.138834.48549 4.666323.65399 17.63684.84245 72.68727.99803 73.46435.22066zm-67.53992-19.02177c.18455-.18455.23809-.433.11898-.55211-.64268-.64267-7.692548-.45968-8.760842.22741-.41359.266-.41153.35103.0159.65473.616494.43806 8.145972.14998 8.625992-.33003z" id="path4202"/><path style="display:inline;fill:#e96149;fill-opacity:1;stroke:#000;stroke-width:.495059;-inkscape-stroke:none;stop-color:#000" d="M118.9515 186.4075c.85841-.24424 1.65024-.53357 1.75963-.64295.42456-.42456-.22962-1.20952-1.00799-1.20952h-.81907l.80879-1.19181c.8101-1.19375.98107-1.80136.611-2.17143-.10878-.10878-1.15167.61142-2.31753 1.60046-1.16586.98903-2.4972 1.94174-2.95852 2.11713-1.62197.61668-1.35377-.35483.33708-1.22102 1.21393-.62187 1.5397-1.03144 1.30562-1.64146-.25785-.67193-.87582-.53786-3.11615.67605-1.13184.61329-2.5736 1.22251-3.20391 1.35382-.6303.13131-1.76909.54147-2.53065.91146-.76156.36999-1.47421.58315-1.58368.47368-.19665-.19665.2676-4.61613.71044-6.76317.32466-1.57403-.38872-1.23608-1.88125.89121-1.43952 2.05172-5.703314 5.94747-6.509361 5.94747-.318517 0-.660907-.21312-.760854-.47359-.0999-.26048-.28624-7.03893-.41398-15.06322l-.232247-14.58963h58.264702l.26744-.0543c.71686-.14568.46121.0119.64747 5.62119.13455 4.05233.19639 8.74408.13741 10.42611l-.10724 3.05823-28.65286.0526c-16.04218.0295-28.851581.18069-29.104301.34357-1.428181.92045 1.180774 1.02042 29.349901 1.12454l28.57099.10561v4.02942c0 3.14117-.10585 4.11728-.48018 4.42795-.7374.61198-1.22748.26949-2.13-1.48856-1.06231-2.0693-2.0283-2.21977-2.33012-.36297-.11176.68762-.44582 1.49282-.74234 1.78934-.50052.50053-.53912.45204-.53912-.67716 0-.66895-.0952-1.21629-.21164-1.21629-.1164 0-.92055.66311-1.787 1.47358-1.24336 1.16301-1.81581 1.47358-2.7162 1.47358-1.54909 0-1.72485-.46898-.71948-1.91974.8508-1.2277 1.07957-2.0098.58789-2.0098-.14408 0-.40196.13507-.57305.30016-.29198.28171-3.42217 2.0054-3.42181 1.88427.00009-.0308.28028-.79291.62265-1.69367.34236-.90076.72741-2.3375.85566-3.19275.37221-2.48202-.51661-2.00747-2.14748 1.14655-1.81083 3.5021-3.17281 5.48498-3.76745 5.48498-.65462 0-.59917-.31782.28669-1.64316 2.00788-3.004 1.13555-3.27365-1.55085-.47939-2.41595 2.51296-3.16383 2.65283-4.34556.8127-1.45095-2.25936-1.78195-2.61969-2.4064-2.61969-1.10298 0-1.27407 2.99026-.21059 3.68066.64925.42148-.45305.89328-2.09988.89879-1.83478.006-2.04883-.17556-1.39051-1.18028.41256-.62965.43341-.87852.10659-1.27231-.63754-.76819-.9975-.60608-2.66815 1.20166-1.49149 1.61389-1.6496 1.69634-3.45812 1.80318l-1.89517.11198zm-14.16803-22.50144c3.32201-.23554 11.25456-.22143 26.40954.047 11.91373.21101 22.34809.28066 23.18747.15479 1.16841-.17521 1.50196-.35442 1.42298-.76456-.0567-.29463-.47079-.63798-.9201-.76301-1.2189-.33915-42.11453-.31723-49.14741.0264-6.154617.30067-7.829188.51507-7.829188 1.00238 0 .27055.733567.53964 1.637301.6006.27015.0182 2.627887-.11837 5.239407-.30354z" id="path4241"/><path style="display:inline;fill:#e96149;fill-opacity:1;stroke:#000;stroke-width:.495059;-inkscape-stroke:none;stop-color:#000" d="M87.463232 150.83584c-.404647-.94062-.639597-1.80642-.522117-1.92401.323-.3233 46.124865-.46428 65.606295-.20194l17.14629.23089-.18616 1.14718c-.10239.63094-.27921 1.23943-.39293 1.3522-.11372.11276-10.61925.16359-23.34562.11295-20.85271-.083-41.60632.22337-53.289195.78658l-4.280856.20637z" id="path4280"/></g></g><g id="g1048259" style="display:inline"><g id="g1156226" transform="matrix(1.15762 0 0 1.15762 -1.6193173 -8.1630312)"><path style="fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:.0140013;stroke-miterlimit:4;stroke-dasharray:none;stop-color:#000" d="m128.39062 72.438151-.0555-.009.0805-.03773c.25473-.119286 1.28845-.558973 1.95701-.73979.45182-.122197.73858-.08917.75546-.04572.0283.07274-.39917.316149-.82577.470259-.43449.156956-.96496.288721-1.37765.342213-.17073.02213-.45431.03258-.53425.01969z" id="path1062686"/><path style="fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:.0582222;stroke-miterlimit:4;stroke-dasharray:none;stop-color:#000" d="M136.20795 71.923638c-1.04402-.441166-3.49536-1.754363-3.41845-1.831283.0244-.02439.16508-.07619.31264-.115118.52812-.139314 1.20404-.19068 2.17166-.165034.80742.02141 1.00144.04222 1.26511.135756.35559.126138.82422.396042.89922.517892.0553.08995-.1415.639172-.45762 1.276628-.20134.405995-.22652.411899-.77256.181159z" id="path1062189"/><path style="font-variation-settings:normal;opacity:1;vector-effect:non-scaling-stroke;fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:4.69677e-05;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:hairline;stop-color:#000;stop-opacity:1" d="M124.09853 62.024075c-.79311-.218438-1.07706-.61332-1.08429-1.5079-.003-.419758.004-.455833.13565-.643317.14692-.209545.67755-.61484 1.13242-.864922l.2712-.149111v3.234203l-.11742-.0042c-.0646-.0023-.21648-.03145-.33756-.0648z" id="path1151271"/><path style="font-variation-settings:normal;opacity:1;vector-effect:non-scaling-stroke;fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:1.11536e-05;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:hairline;stop-color:#000;stop-opacity:1" d="m131.34943 56.069993-.45015-.0056-.004-.04311c-.006-.07854-.0596-.201594-.21172-.495795-.2595-.501852-.3038-.62324-.30084-.824532.008-.599103.006-.63615-.0665-1.104407-.0121-.07687-.0198-.141619-.0174-.143887.002-.0021.0735-.01084.15813-.01906.74675-.07254 1.33672-.243606 1.7682-.512696.0563-.03514.10491-.06155.10805-.05868.003.0029-.013.118255-.0358.256418-.0227.138162-.0624.399137-.0882.57994-.0827.578856-.17845 1.150199-.23639 1.410373-.0154.06903-.0432.193822-.062.277306-.047.209276-.0603.325129-.0603.523832 0 .169367-.00016.170446-.0255.167956-.014-.0013-.22804-.005-.47563-.0081z" id="path1150531"/><path style="font-variation-settings:normal;opacity:1;vector-effect:non-scaling-stroke;fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:1.34283e-05;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:hairline;stop-color:#000;stop-opacity:1" d="M129.49707 56.288969c-.004-.0043-.0111-.03359-.0111-.06484 0-.03125-.0134-.118166-.0293-.19312-.1031-.479719-.35805-.848402-.87128-1.259833-.30208-.242127-.57259-.413562-.82271-.521321-.0434-.01867-.0789-.03852-.0789-.04406 0-.0056.0387-.01018.0864-.01028.11104-.000164.46613-.03029.64953-.05512.41608-.05633.79932-.185711 1.12148-.378606.0636-.03804.11982-.06694.12546-.06422.004.0026.0145.06993.0202.149379.0516.73001.24993 1.365088.59677 1.910866.10344.162669.26327.359803.37212.458771.0422.03835.0768.07214.0768.07505 0 .0087-1.22557.0061-1.23647-.0026z" id="path1150570"/><path style="font-variation-settings:normal;opacity:1;vector-effect:non-scaling-stroke;fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:1.2029e-05;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:hairline;stop-color:#000;stop-opacity:1" d="M132.75112 56.125355c.0161-.01574.12725-.116412.24702-.223709.44427-.397977 1.01991-.945714 1.40736-1.339136l.20922-.212445.0436.08986c.1172.241794.27604.473555.4318.630032.12523.125798.22624.199728.36842.269671.10705.05264.30804.115641.36898.115641.0154 0 .028.0047.028.01038 0 .0057-.0943.09858-.20954.206473-.11523.107902-.27404.260483-.35289.339065l-.14338.142877h-2.42778z" id="path1150492"/><path style="font-variation-settings:normal;opacity:1;vector-effect:non-scaling-stroke;fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:1.35928e-05;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:hairline;stop-color:#000;stop-opacity:1" d="M135.8496 56.047847c.006-.0066.0741-.05954.14885-.11765.15275-.118706.13821-.123173.14573.04472l.003.08498-.15565-.000027c-.0906-.000015-.15024-.0049-.14272-.01203z" id="path1150609"/><path style="display:inline;vector-effect:non-scaling-stroke;fill:none;stroke:none;stroke-width:.00026458;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;-inkscape-stroke:hairline" d="M127.82964 54.191659c.67586-.073 1.35172.03366 2.02758-.737304 1.2676-.02268 2.27908-.301478 2.81096-1.059871-.23522 1.834168-1.38849 5.002899 1.84325 1.751092.46113 1.194934 1.03068 1.305766 1.61285 1.290278.0849 1.184921-.0597 2.438714 1.19812 3.271774-.5271.838776-1.14085 1.569224-1.19812 2.995287-.47617.406606-.95235.149448-1.42852 1.428522-.94369-.251355-1.20858.06296-1.42852.414732" id="path1061291"/><path style="fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:.011172;stroke-miterlimit:4;stroke-dasharray:none;stop-color:#000" d="M127.04439 71.654164c-.0688-.01769-.0624-.03419.0361-.09282.14544-.08663.55801-.20331 1.00304-.283685.16541-.02989.38019-.04385.38019-.02475 0 .07851-.52539.286236-.95314.37686-.0988.02091-.15599.02688-.28007.0292-.0858.0018-.16951-.000674-.18606-.0048z" id="path1062647"/><path style="font-variation-settings:normal;opacity:1;fill:#f2d433;fill-opacity:1;stroke:none;stroke-width:.1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;stop-opacity:1" d="M485.53821 265.35097c-.56442-.10179-1.09632-.37281-1.50224-.76544-.2244-.21706-.21269-.29565.0728-.48828.52596-.35495.6128-.42608.72591-.59467.13543-.20185.14818-.30646.0538-.44125-.10076-.14385-.30467-.20749-.79438-.24795-.55446-.0458-.93361-.1491-1.38653-.37776-1.13862-.57484-2.03408-1.61174-2.30429-2.66825-.16449-.64315-.20867-1.20102-.1874-2.36636.0252-1.38044.13598-2.21838.41769-3.15921.19649-.65622.26787-.76447 1.76566-2.67755.46801-.59776.96945-1.25892 1.11433-1.46925.95486-1.38622 1.94902-3.67053 2.40293-5.52123.19782-.80657.25814-1.2475.26069-1.90554l.002-.6038-.17082-.50317c-.39955-1.17687-1.01577-2.18254-1.87154-3.05429-.83727-.85293-1.66906-1.44797-2.85435-2.04191-2.21956-1.11223-4.94122-1.75155-8.54562-2.00738-1.13518-.0806-2.12497-.18014-2.16376-.21766-.0167-.0161-.0257-2.5625-.0201-5.65859l.0102-5.62926.3824-.15266c1.22023-.48713 2.2701-.62821 6.11854-.82221 2.51776-.12692 3.968-.23337 5.50131-.40378 1.47677-.16413 1.72296-.22868 2.28524-.59914 1.84816-1.21766 4.02371-4.72672 4.43087-7.14679.0745-.44286.13946-1.2137.13999-1.66145l.00041-.35222h3.36174l.22111.18232c.34767.28669.64997.42165.94204.4206.39243-.001.74101-.21824.81319-.50582l.0246-.098 1.67375.0105 1.67375.0105.0495.26165c.0876.46254.26918.86855.51685 1.15559.29325.33988.94803.55465 1.2603.4134.23942-.1083 1.12292-.78348 2.01043-1.53638l.3706-.31439h8.30544l-.45772.43756c-.52369.50064-2.0214 2.07535-2.57008 2.70221-.82475.94228-1.21238 1.56166-1.50545 2.40551-.20695.59588-.27738 1.02235-.26057 1.57784.0124.41118.027.49107.12669.69404.15079.30707.32309.4157.65218.41121.69417-.009 1.32407-.73189 1.72434-1.97764.18159-.56518.34078-.88231.74615-1.48648.6292-.93779 1.56419-2.01602 2.78744-3.21449.42935-.42065.98665-.94143 1.23846-1.15729l.45781-.39247h.97978l.049.89564c.11413 2.08747.35327 3.50399.80021 4.73985.39573 1.09431 1.04304 2.18327 1.71832 2.89071l.1657.1736-.36228-.0327c-.7091-.064-2.1227-.0322-2.73724.0616-1.39308.21266-2.67574.6573-3.56393 1.23547-.47121.30674-.96057.81928-1.1496 1.20404l-.15714.31987v.5494c0 .66095.0184.70079.31131.67265.14072-.0135.44386-.14097 1.10854-.46607.50317-.2461 1.07788-.50135 1.27713-.56723.48487-.16031 1.25384-.31078 1.88651-.36914.63515-.0586 2.04625-.0263 2.64201.0605.66552.0969 1.36862.23755 1.36862.27369 0 .0181-.19304.3361-.42898.70656-1.48462 2.33108-2.2614 4.10249-2.69079 6.13621-.17514.82948-.33807 2.10299-.344 2.68869l-.002.2214-.13423-.36228c-.61836-1.66896-1.65488-3.213-2.6547-3.95454-.32089-.238-1.55115-.84432-1.78402-.87924-.23307-.035-.42892.0246-.85231.2592-1.1332.6279-1.08104 1.1265.23612 2.25704 1.04367.89579 1.91248 1.87605 2.92512 3.30032l.29807.41924-.41266.21606c-.69064.36161-1.1628.76851-1.65823 1.42902-.25421.33891-.67973 1.06249-.83309 1.41664-.0534.12343-.10623.2247-.1173.22506-.0111.00036-.0814-.13574-.15639-.30242-.42327-.94141-1.08715-1.79469-1.80948-2.32571-.29987-.22045-1.09895-.62073-1.55631-.77961-.26821-.0932-.38979-.11201-.72751-.11279-.37494-.00085-.41796.007-.57138.10887-.0913.0604-.21113.18719-.26639.28178-.12564.21507-.26477.71558-.27706.99677l-.009.21327.76419.52756c.85343.58914 1.33911 1.03348 1.83064 1.67478l.29311.38241-.4175.031c-.80144.0596-1.486.3114-1.93174.71063l-.21524.19278-.20198-.15057c-.26739-.19933-.39774-.26216-.74169-.35747-.80313-.22256-2.85444-.21402-4.71337.0196-1.27135.15979-2.66672.46255-3.60476.78213-.61321.20891-1.4673.62863-1.73485.85255-.11401.0954-.4129.34695-.66418.55895-.49747.4197-.9541.76957-1.3626 1.04404-.51738.34763-1.04727.9348-1.82511 2.02237-.94183 1.31688-1.77798 2.77429-2.13902 3.72832-.19316.51043-.69458.96673-1.51034 1.37442-.89613.44786-1.43511.97246-1.28577 1.25149.10452.1953.56547.19428 2.17021-.005 3.26675-.40527 7.46414-.43396 8.72465-.0596.2413.0717.36846.19086.29633.27777-.13127.15817-.9761.30223-2.37802.4055-2.43924.17968-3.59907.36194-4.61831.72575-.81193.28981-1.31707.71342-1.2522 1.05011.018.0934.15237.12564.77844.18659.72248.0703 7.09227.0692 8.51362-.002 1.48263-.0738 2.34868-.15799 2.61487-.25426.37221-.13462.39747-.13638.42421-.0297.0567.22624-.24151.7357-.67145 1.14715-.97291.93105-2.10236 1.18688-5.28601 1.19733-.77488.003-2.46855-.0108-3.7637-.0297-3.70311-.054-4.42822.032-4.42774.52564.00071.71503 1.5817 1.26901 4.34723 1.5233.95106.0874 3.91504.12518 4.90304.0624 1.34101-.0852 1.94088-.23949 3.19542-.822l.30941-.14367.0931.26953c.0744.21521.0931.3549.0931.69315 0 .4038-.007.43674-.14088.70443l-.14089.28082-.34216-.0121c-.57692-.0203-1.60294.27643-3.07939.89067-.85454.35551-1.42082.55636-1.94971.69155-1.24552.31836-2.32495.33702-3.404.0589-.56942-.14678-.9622-.30843-1.83357-.75462-1.14529-.58645-2.12642-.86405-3.07736-.87072-.47051-.003-.54049.006-.69373.0874-.19265.10292-.23171.1962-.20298.48473.0416.41764.40439.98787 1.00568 1.58061.7712.76024 1.62755 1.32991 3.17097 2.10942 1.25736.63503 1.56469.81678 1.76181 1.04191.20429.23333.17678.34002-.18704.72522-.55602.5887-1.50418 1.08726-2.46616 1.29674-.34479.0751-1.29278.10905-1.583.0567zm.10224-32.95004c.3956-.19849.79684-.99556 1.0017-1.98989.15294-.74232.18319-1.09048.18186-2.09318-.001-1.10502-.076-1.68919-.30477-2.38934-.32388-.99111-.94772-1.75267-1.43834-1.75589-.57727-.004-1.02285.86088-1.19294 2.31498-.0713.60952-.0816 2.14196-.019 2.83658.20518 2.2789.91268 3.50767 1.77154 3.07674z" id="path1150453" transform="scale(.26458)"/><path style="display:inline;fill:#000;stroke:#000;stroke-width:.053975;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" d="M132.88618 52.057684c.0999.255-.0197 2.10883-.17927 2.777677-.0903.378649.29761.270786.93561-.260144.99187-.825459 1.64168-1.036632 1.2406-.403177-.21341.337076-2.48829 2.376026-2.64579 2.371413-.41911-.01228-.55351-.522713-.35184-1.336082.054-.218247.16392-.902546.244-1.520665.17169-1.325219.32762-1.901829.51426-1.901829.0745 0 .18365.122762.24243.272807zm-2.81761.248008c.15653.201871.4363 1.883698.3687 2.216492-.0467.230553.0132.456363.24126.908229.25576.506654.28166.619581.16443.716872-.34005.282224-.9441-.583865-1.13525-1.627751-.11705-.63911-.14099-1.757503-.0454-2.114639.0658-.245618.2565-.292193.40614-.0992zm-2.17188 1.776625c.29837.06826.57593.239991.90838.562065.55277.535503.74935 1.082796.66019 1.837986-.0875.740452-.81666 1.860898-1.3446 2.065885-.14123.05484-.92641.131485-1.74484.170322-1.35946.06452-1.53699.09496-2.05457.352352-.31159.154957-.72453.426458-.91762.603336-.31856.291786-.35106.370939-.35074.853834.00083 1.05629.4732 1.415274 1.98429 1.507693 2.00454.122599 3.24114.801913 3.57427 1.963475.12808.446556-.30024 1.693323-.79712 2.320353-.2155.27196-.45978.586836-.54283.699723-.21428.291356-.30359 1.318472-.15401 1.771664.13143.398233.58591.750152.96958.750791.26631.000411.2913.148095.0494.292976-.16343.09797-.16233.112776.0189.252934.34974.270384 1.0953.12297 1.43239-.28321.10374-.124929.0235-.194834-.52326-.455745-.59053-.281832-1.0521-.715072-1.0521-.987531 0-.194925.63472-.112083 1.07657.140513.56114.320791 1.13219.320424 1.85943-.001.30843-.136404.66684-.248007.79646-.248007.20224.000006.23565.04823.23565.340015 0 .35257-.28095.669594-.71569.807579-.16072.051-.17459.08273-.0662.151372.22275.14109.99883.103383 2.43632-.118389 1.81962-.280725 2.69126-.239474 3.35534.1588.27281.16361.62995.319793.79362.347074.42773.07129.45415.425849.0619.830585-.22514.232264-.36239.539154-.53847 1.203816-.28649 1.081569-.36903 1.117819-1.39776.614013-4.1049-2.010309-4.85689-2.347378-5.24343-2.350251-.14696-.001-.0703.420793.12651.697369.19612.275442.21732.280765.89282.224133.60677-.05087.69193-.03734.69193.10992 0 .261147-.46336.627906-1.02601.812153-.28139.09215-.77949.306409-1.10686.476138l-.5952.308602h-1.73607c-.95482 0-1.82025-.03442-1.92314-.07647-.17394-.07108-.1757-.0891-.0248-.255818.27608-.305073.19643-.411623-.30891-.413252-.57742-.0019-.74667-.09912-.70311-.404028.0437-.305341.41295-.483993 1.00431-.485814.58027-.0018 2.17192-.38832 2.09717-.509293-.0296-.04806-.11797-.08739-.19611-.08739-.0781 0-.42897-.281262-.77958-.625026-.73415-.719852-.8548-1.069287-.67125-1.944325.14351-.684183.5969-1.656215.97854-2.097876.41399-.479132.62609-.95309.62609-1.399095 0-.299999-.0779-.46747-.36524-.785564-.61104-.676346-.99428-.817505-2.41243-.888573-1.51038-.07568-2.08016-.327785-2.73555-1.007639-.45433-.376993-.45681-.555509-.41919-1.105361.0552-.806678.48585-1.687108 1.01157-2.067931.21295-.154252.63718-.403189.94275-.553194.50897-.249842.68113-.277384 2.05138-.328168 1.23527-.04579 1.55298-.089 1.82404-.248122.66409-.389852.88711-1.353622.50695-2.190804-.16254-.357982-.26121-.438118-.76663-.622558-.84171-.307169-1.03741-.423539-1.00451-.597342.0359-.189675.62782-.232023 1.25088-.08951zm5.67133 15.892169c-.35466.06232-.64081.157937-.63591.212498.012.133368 3.3071 1.816576 3.57663 1.827015.20932.0082.23908-.04572.79241-1.432459.0503-.126068-.4583-.433093-.99671-.601646-.49651-.155448-1.86708-.158157-2.73642-.0052zm-3.9079.419017c-.18655.486139.0593 1.12312.38506.998074.14707-.05644.16606-.14289.11438-.520359-.0341-.248975-.0875-.493621-.11828-.543657-.0896-.144671-.31528-.105586-.38111.06594zm-2.42146 1.127674c-.14035.08183-.1224.09872.10749.10123.26004.0027.96404-.235456.96404-.326323 0-.06824-.88872.118426-1.07162.225093zm1.66683.104244c-.12824.08288-.12562.09637.0189.09768.0923.000833.19535-.04312.22908-.09768.0775-.125551-.0538-.125551-.24803 0zm.44642.4439-.69442.252512.61859-.04107c.58911-.0391 1.51426-.377856 1.51426-.554453 0-.10649-.58774.03366-1.43843.343003zm7.9858-17.277724c0 .225663-.22752.435616-.9519.878363-.72893.445517-1.76271 1.538624-1.87756 1.98527-.0923.358759-.31227.598919-.51112.55789-.23724-.04894-.20235-.586041.0664-1.020711.21102-.341445 1.30933-1.443871 1.93506-1.942315.63556-.506277 1.33923-.747185 1.33923-.458497zm-.0325 3.685272c.37277.162148.60199.51612.43948.678634-.0772.07724-.25133.07068-.618-.02331-.71024-.182029-1.43413-.147026-1.89168.09147-.47768.248983-.47646.249069-.47646-.03282 0-.663127 1.61967-1.117219 2.54666-.713987zm-8.65018 1.140095c.29774.575737.12706 1.889778-.24546 1.889778-.24036 0-.39679-.477708-.39679-1.211757 0-.934413.32969-1.282466.64225-.678021zm6.59954.873103c.41304.206333.88536 1.01182.91968 1.568341.0347.56404-.1663.516301-.61629-.146325-.22341-.328987-.56163-.72218-.75159-.873761-.39145-.312316-.43076-.470956-.15354-.61932.23945-.128152.19163-.133796.60174.07107zm-1.09469 1.59618c.388.208092.69186.723005.76989 1.304604.0478.355423.031.397555-.15647.397555-.15162 0-.2783-.13516-.45675-.487309-.13582-.268018-.39324-.588369-.57209-.711893-.17882-.123524-.34037-.23568-.35899-.249238-.0187-.01355-.003-.117296.0315-.230531.0807-.254194.29945-.261022.74292-.02318zm-.69096 1.206145c.10915.109114.1984.240411.1984.291752 0 .166761-.20343.224392-.35321.100065-.19898-.165139-1.28206-.04849-1.98229.213501-.6351.237616-1.07477.642811-1.23966 1.142418-.14792.448205-.0478.530271.65046.532403.36576.001.59459.06729.86275.249525.37438.254385.81216.325111.92111.148804.0337-.05456.10332-.0992.15466-.0992.12726 0 .11881.468578-.009.548109-.0568.0351-.0751.152621-.0406.261174.1208.380561-.14433.75869-.73549 1.049003-.50665.248811-.65684.274-1.60073.268485-1.09063-.0064-1.84745-.205636-1.76124-.463714.0318-.09546.3835-.11741 1.47199-.0919 1.44137.03378 1.80178-.02261 2.10911-.329906.18611-.186105.22309-.396543.0509-.290189-.16467.101776-3.1605.131019-3.1605.03086 0-.226323.53207-.401932 1.38525-.45721.65837-.04264.87628-.0885.79711-.167708-.13049-.13051-1.47832-.143871-2.36795-.02347-.516.06985-.62417.06074-.58933-.0496.0235-.07433.18458-.198766.35803-.276542.17345-.07778.34246-.226819.3756-.331209.13016-.410081.76553-1.359057 1.01637-1.518027.14573-.09235.38594-.280388.53384-.417874.3052-.283724 1.2603-.508397 2.18638-.514316.44139-.0027.61529.04122.76882.194759z" id="path1048257"/><path style="font-variation-settings:normal;opacity:1;fill:#f2d433;fill-opacity:1;stroke:#000;stroke-width:.00170048;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;stop-opacity:1" d="M491.12596 269.77587c-.18731-.0224-.34883-.1082-.51775-.27489-.55356-.54627-.82074-1.72962-.6281-2.78182.0435-.23765.13258-.54304.19947-.68388.14764-.31089.48911-.5025.80467-.45153.13306.0215.23097.0722.33054.17125.0542.0539.0748.0818.10162.13753.15559.32329.41272 1.70398.50281 2.69986.0155.17135.0135.51939-.004.61684-.0292.16663-.0725.25902-.16412.3501-.14342.14258-.42611.24043-.62553.21654z" id="path1155221" transform="scale(.26458)"/></g></g><g id="g33196" style="display:inline"><path d="M212.90283 186.10982c4.181-.46747-4.0821-2.42062 2.25018-2.42062 5.91023 0 5.70798.81482 7.22749 2.37949.88389.91016-4.58153.69226-9.47767.0411zm-15.46705-6.59c-.97163-.96944-1.07716-2.57204-.16938-2.57204.35456 0 .92633.50217 1.27058 1.11593.63124 1.12542 2.0152 1.09537 7.92125-.17202 2.66664-.57223 1.49683.62887-1.62759 1.67112-2.99919 1.00048-6.36867.98089-7.39486-.043zm17.20376-1.45213c0-.37227.47593-.67686 1.0576-.67686.58169 0 .86894.30459.63834.67686-.23059.37227-.70651.67686-1.05761.67686-.35108 0-.63833-.30459-.63833-.67686zm1.60057 3.70417c.23059-.37227 1.61222-2.26436 1.77675-2.26436.16453 0-.75918 1.89209-.75918 2.26436 0 .37227-.32329.67686-.71842.67686-.39512 0-.52975-.30459-.29915-.67686zm-10.12108.0837c-.10012-.89442 2.76224-2.07128 3.89809-1.92089.60031.0794-.66904 2.12925-2.64646 3.10483-.28261.13942-1.19647-.69136-1.25163-1.18394z" style="display:inline;fill:#000;stroke-width:.140008" id="path33192"/><path style="fill:#000;fill-opacity:1;stroke:none;stroke-width:.264582px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" d="M211.25213 153.01461c.77636-.15586 1.55272-.31173 2.32908-.46759-.26313 8.90449-.75611 17.69406 0 27.10817-1.40751-.73058-1.84904-.30199-2.39608 0 .0288-8.88345.36213-17.91911.067-26.64058z" id="path33190"/><path d="M235.08897 138.99505c-.97566-1.531-3.14055-1.44607-4.76403-1.70774-12.98036-.81013-25.97127-1.48177-38.97235-1.88747-.78426-.42228-2.83205.51436-1.08292.97974 10.74129.91664 21.50967 1.47224 32.27083 2.09742" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path56244"/><path d="M233.55661 153.74016c-1.86908-.1811-3.72558-.57239-5.61237-.62545-12.4622-.84676-24.93403-1.58416-37.41915-2.03386-1.01601-.52062-2.66615.95402-.79197.98761 12.32595 1.06876 24.67585 1.83698 37.02595 2.56576 2.23261.0602 4.48626.38041 6.71535.005l.16189-.0812.10307-.10423" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path56510"/><path d="M190.28608 135.51334c-.39215.35605-1.47063.73425-1.42663 1.35454-1.20136 1.60145-4.75097 4.00484-4.82263 5.83297-.55661 2.2418 4.52466 6.39667 4.86402 9.04742.13922.76058 1.3158.32678 1.08754-.39593.38504-3.5495-.76357-4.89123-.56903-8.4554.0529-1.36942 1.50696-4.96703 1.44213-6.33715" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path56822"/><path d="M233.85108 154.80438c.65427.17809.94559-.45065.89899-1.00012.27288-3.34811.33555-6.70955.40249-10.06691.005-1.58019.0711-3.16624-.0636-4.7423-.33393-.71809-.80419.1214-.9001.61141-.69974 3.5749-.63175 7.25799-.844 10.89377-.0513 1.37986-.19192 2.76592-.0669 4.14435.009.21119-.17317-.006-.26483.016" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path57075"/><g aria-label="Office" id="text96922" style="font-size:10.5833px;line-height:1.25;font-family:Lato;-inkscape-font-specification:Lato;text-align:center;letter-spacing:0;text-anchor:middle;stroke-width:.264583" transform="rotate(3.969 -167.40386 399.23174)"><path d="M180.56737 123.04782q-1.52962 0-2.60449-.87849-1.14721-.94051-1.14721-2.43396 0-1.75699 1.1007-3.20392 1.23507-1.62781 3.11092-1.62781 1.8035 0 2.70266.82682.89917.82682.89917 2.48563 0 1.75699-1.01285 3.18326-1.16789 1.64847-3.0489 1.64847zm.45992-6.74375q-1.15238 0-1.97404 1.11621-.76997 1.04386-.76997 2.31509 0 .85783.66662 1.39526.64079.51677 1.61747.51677 1.13688 0 1.89652-1.11621.69763-1.01802.69763-2.3151 0-1.0852-.48576-1.50895-.46509-.40307-1.64847-.40307z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111278"/><path d="M187.94157 117.42544q.69246-.062.99218-.062.96635 0 .96635.66146 0 .68213-1.02836.65112-.32556-.0103-.98701.0465-.0207.54777-.0103 1.39526.0207 1.21956.0207 1.39009 0 .94568-.11885 1.49861-.11886.55294-.68213.55294-.28939 0-.50643-.18604-.21187-.18603-.21187-.47025 0-.0672.0103-.12919.12403-.73897.12403-1.39009v-2.58382q-.093.005-.34107.0413-.19637.0258-.29972.0258-.31522 0-.52193-.18086-.2067-.18604-.2067-.4961 0-.48059.50642-.63045.22738-.0672.90434-.0878.005-.093.0672-.58394.14469-1.15238.62528-1.71565.59945-.7028 1.83968-.7028.94567 0 .94567.67696 0 .67179-.8785.67179-.62528 0-.9095.43925-.21187.32556-.28422 1.01802z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111280"/><path d="M193.3159 117.42544q.69246-.062.99219-.062.96634 0 .96634.66146 0 .68213-1.02835.65112-.32556-.0103-.98702.0465-.0207.54777-.0103 1.39526.0207 1.21956.0207 1.39009 0 .94568-.11885 1.49861-.11886.55294-.68213.55294-.28939 0-.50643-.18604-.21187-.18603-.21187-.47025 0-.0672.0103-.12919.12402-.73897.12402-1.39009v-2.58382q-.093.005-.34106.0413-.19637.0258-.29973.0258-.31522 0-.52193-.18086-.2067-.18604-.2067-.4961 0-.48059.50643-.63045.22737-.0672.90433-.0878.005-.093.0672-.58394.14469-1.15238.62528-1.71565.59945-.7028 1.83968-.7028.94567 0 .94567.67696 0 .67179-.87849.67179-.62529 0-.9095.43925-.21188.32556-.28422 1.01802z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111282"/><path d="M197.41383 116.52111q-.33073 0-.57361-.22221-.24288-.22221-.24288-.5426 0-.32039.24288-.5426.24288-.22221.57361-.22221.33073 0 .56844.22221.24288.22221.24288.5426 0 .32039-.24288.5426-.23771.22221-.56844.22221zm.43925 3.78787q0 .29456.0155.94568.0207.65112.0207.94567 0 .29972-.20154.49609-.20153.19121-.51159.19121t-.5116-.19121q-.20153-.19637-.20153-.49609 0-.29455-.0207-.94567-.0155-.65112-.0155-.94568 0-.45992.0517-1.15238t.0517-1.15238q0-.29972.20153-.49093.20154-.19637.5116-.19637.31006 0 .51159.19637.20154.19121.20154.49093 0 .45992-.0517 1.15238t-.0517 1.15238z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111284"/><path d="M201.58927 123.05816q-1.13687 0-1.90685-.64596-.81132-.68212-.81132-1.79833 0-1.02836.72864-2.12389.82682-1.25057 1.92235-1.25057.53744 0 1.25574.28939.87333.35656.87333.82165 0 .25321-.1757.44958-.18604.21188-.48059.21188-.22221 0-.53743-.23771-.31006-.24288-.93535-.24288-.3979 0-.86299.78031-.44442.75447-.44442 1.30224 0 .5426.39274.85266.37207.29455.98185.29455.34623 0 .84749-.26355.50126-.26354.63562-.26354.27905 0 .47542.20153.20154.20154.20154.45992 0 .40308-.87849.80615-.78548.35657-1.28158.35657z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111286"/><path d="M207.25299 122.97031q-1.23506 0-2.02054-.58911-.86816-.65112-.86816-1.83451 0-1.30741.68729-2.21174.76481-1.00252 2.06189-1.00252.89916 0 1.49344.28938.78031.38241.78031 1.18856 0 .56844-.63562 1.00769-.28938.20153-1.16271.58911l-1.74149.76997q.24804.26872.59944.40308.3514.13435.80615.13435.69246 0 1.17305-.28421.42892-.25322.6873-.25322.53743 0 .53743.52193 0 .58911-.86299.96118-.72347.31006-1.53479.31006zm-.13952-4.38732q-.48059 0-.82166.3204-.34106.32039-.54777.96117.58395-.25321 1.16272-.50126.69763-.31522 1.11104-.58394-.34623-.19637-.90433-.19637z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111288"/></g></g><g id="g113568" style="display:inline" transform="translate(.61359839 -3.4077051)"><g id="g113508" transform="matrix(1.2155 0 0 1.2155 2.7518712 -1.5422516)"><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M19.016225 23.059374c-3.63094-.445314-8.788822-.159609-10.8040514 3.43252-2.8856808 5.143705-.9539108 9.080185 0 12.308178" id="path113492"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M34.268926 60.598348c3.071014 2.102726 8.452328 5.330485 11.766151 2.728165 4.745186-3.726358 8.225919-7.807711 8.723188-11.414479" id="path113494"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M9.9657963 34.504156c-2.6809038 2.488933-5.2303447 4.965497-3.783025 8.821637 2.0724703 5.521748 6.3272297 6.582237 9.4100147 7.933653" id="path113496"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M36.529224 59.342848c-.93487 2.962959-1.336075 6.569255-7.415403 6.388504-3.027112-.09-6.710252-2.310979-12.13315-6.729684-4.358609-3.551498-6.810142-7.24033-6.311107-11.4316" id="path113498"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M50.479053 53.999239c5.206992.497668 9.243228 1.22811 12.133194-2.786333 4.13826-5.748429 1.367975-10.147706 0-13.755204" id="path113500"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M37.290784 15.33678c-3.101115-1.940395-7.921842-3.651541-11.881464-2.51755-7.4194 2.124831-8.307977 9.015624-8.801424 12.348296" id="path113502"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M35.02514 16.888937c.934865-2.96296 1.336068-6.569255 7.415398-6.388504 3.027111.09 6.710249 2.310978 12.133148 6.729684 4.35861 3.551498 6.810143 7.24033 6.311107 11.4316" id="path113504"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M62.88418 41.900036c2.680901-2.488933 6.971605-6.960031 5.524282-10.81617-2.072469-5.521749-6.327223-6.582238-9.410007-7.933654" id="path113506"/></g><circle style="font-variation-settings:normal;display:inline;opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000;stop-opacity:1" id="circle113510" cx="67.316811" cy="75.830711" r="3.506027"/><circle style="font-variation-settings:normal;display:inline;opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000;stop-opacity:1" id="circle113512" cx="79.496933" cy="85.228302" r="1.719918"/><circle style="font-variation-settings:normal;display:inline;opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000;stop-opacity:1" id="circle113514" cx="73.733681" cy="81.545563" r="2.4290087"/><g aria-label="Relax, Jürgen will help us..." id="text178250" style="font-size:11.6417px;line-height:1.1;font-family:Lato;-inkscape-font-specification:Lato;text-align:center;letter-spacing:0;text-anchor:middle;stroke-width:.275437" transform="matrix(.9606 0 0 .9606 8.0908185 5.5079247)"><path d="M29.400769 26.944168q-.216008 0-.403594-.181901-1.881544-1.858807-4.183736-2.501147l.04548 1.114147.02842 1.119832q0 .250114-.164849.414963-.159163.170532-.403594.170532-.24443 0-.409278-.170532-.159164-.164849-.159164-.414963 0-.44907-.04547-1.33584-.03979-.892454-.03979-1.341524 0-.522967.113688-1.557532.113689-1.034565.113689-1.551848 0-.289905-.05684-.858348-.05116-.568442-.05116-.858348 0-.324012.181902-.568442.216008-.301274.596865-.272852l1.369946.108004q.778766.09664 1.313102.380856 2.302191 1.222151 2.302191 2.984323 0 .864032-.78445 1.52911-.630971.534335-1.574586.812872 1.767856.949299 2.643257 2.000917.147795.181902.147795.386541 0 .238746-.176217.414963-.170533.176217-.403594.176217zm-3.620978-7.514808-.841295-.06821.05684.687815q.03979.420648.03979.687815 0 .454754-.0739 1.131201l-.119373 1.1312q.07958 0 .244431.0057.170532.0057.255799.0057 1.449528 0 2.171449-.386541.318328-.176217.591181-.460438.301274-.318328.301274-.54002 0-.790135-.898139-1.472266-.824241-.625287-1.728065-.721922z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207854"/><path d="M33.766407 27.143123q-1.28468 0-2.080499-.64234-.869717-.710553-.869717-1.989548 0-1.47795.716237-2.478409.778766-1.091409 2.080499-1.091409.943615 0 1.540479.318327.733291.392226.733291 1.205098 0 .568443-.64234 1.034565-.284221.20464-1.205098.636656l-2.17145 1.028881q.318328.471807.790135.710552.477492.238746 1.108463.238746.392225 0 .920876-.147795.670762-.187586.864033-.48886.19327-.306959.414963-.306959.198955 0 .352434.153479.159164.147795.159164.34675 0 .630971-1.017512 1.085725-.869717.386541-1.693958.386541zm-.15348-5.17851q-.693499 0-1.153938.54002-.460438.534336-.687815 1.614377l1.745118-.829926q1.028881-.50023 1.466581-.869717-.48886-.454754-1.369946-.454754z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207856"/><path d="m38.944917 22.413682-.08527 2.825159q0 .449069-.04548 1.318786-.05684.568443-.557073.568443-.557074 0-.557074-.579812 0-.687815.06253-2.063445.06253-1.381315.06253-2.069131 0-.898139.02842-2.052077.02842-1.159622.02842-2.057761 0-.568442.557074-.568442.562757 0 .562757.568442 0 .898139-.02842 2.057761-.02842 1.153938-.02842 2.052077z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207858"/><path d="M45.123886 27.256811q-.108004 0-.392226-.250114-.255799-.233062-.380856-.414963-.545705.29559-.960668.443385-.414963.153479-.693499.153479-1.330155 0-1.938389-.750344-.574127-.704868-.574127-2.160081 0-1.37563.943615-2.353351.949299-.977721 2.2624-.977721.494545 0 1.108463.255799.773082.318328.773082.767397 0 .15348-.113689.272853-.05684.216008-.09095.710553-.02842.494545-.03411 1.267626-.0057.704869.09663 1.114147.05684.250115.358119 1.000459.03979.102319.130742.301274l.03411.09664q0 .227377-.159164.375172t-.369487.147795zm-1.18236-3.950674q0-.24443.02842-.528651.03411-.289906.09663-.613918-.210324-.108004-.363803-.159164-.147795-.05116-.238746-.05116-.881086 0-1.523426.721922-.636655.716237-.636655 1.654167 0 .932246.329696 1.398368.329697.466123.98909.466123.545705 0 .926561-.198955.20464-.108004.574127-.432016-.181901-1.506372-.181901-2.256716z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207860"/><path d="m51.865612 22.004404-.829926.778766-1.011828 1.006143 1.853122 2.421564q.142111.181902.142111.358119 0 .221693-.170533.392225-.170532.170533-.386541.170533-.216008 0-.392225-.210324-.522967-.608233-1.841753-2.341982l-1.108463 1.142569q-.335381.301274-.977721.93793-.181901.204639-.392225.204639-.216008 0-.386541-.170533-.164848-.170532-.164848-.392225 0-.176217.142111-.358118.159164-.210324.494545-.505914.392225-.34675.517282-.477492l1.210782-1.267626-.744659-1.074356q-.44907-.64234-.784451-.93793-.216008-.193271-.216008-.420648 0-.227377.159164-.403594.164848-.176217.375172-.176217.335381 0 1.011828.875401l.983405 1.358578 1.114147-1.023197q.6935-.653708.93793-1.023196.181901-.267168.432016-.267168.221692 0 .392225.164849.170533.164848.170533.380856 0 .312643-.528651.858348z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207862"/><path d="M54.338337 28.837081q-.198955 0-.34675-.153479-.147795-.15348-.147795-.352434 0-.164849.352434-.977721.306959-.704869.471808-1.006143.147795-.272853.392225-.272853.204639 0 .34675.159164.147795.15348.147795.352434 0 .136427-.807188 1.944073-.130742.306959-.409279.306959z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207864"/><path d="M16.707451 33.171396q-.10232 0-.352434-.03979-.244431-.04548-.380857-.04548-.278536 0-.653708.01705l.02842.676446q0 4.229211-.562758 6.156231-.375172 1.273311-1.313102 1.273311-.98909 0-1.961126-.716237-1.074356-.79582-1.074356-1.8247 0-.699185.574126-.699185.574127 0 .574127.687816 0 .471807.670762.93793.64234.443385 1.216467.443385.466123 0 .648024-2.859265.08527-1.352893.08527-3.399286 0-.159164-.02842-.613918l-.346749.0057q-.221693 0-.670762-.01137-.443386-.01705-.670762-.01705-.250115 0-.420648-.159164-.170533-.159164-.170533-.432016 0-.585496.790135-.585496.193271 0 .574127.01705.380857.01705.568443.01705.358118 0 1.068671-.03979.716238-.04548 1.074356-.04548 1.296049 0 1.296049.659393 0 .227377-.15348.403594-.164848.193271-.409278.193271z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207866"/><path d="M23.085374 37.207337q0 .409278.0057 1.227835t.0057 1.227836q0 .125057.01705.380856.02274.255799.02274.380857 0 .24443-.164848.397909-.164848.159164-.403594.159164-.437701 0-.557074-.54002-.710553.369487-1.637114.369487-.744659 0-1.23352-.329696-.54002-.363803-.64234-1.062987-.221692-1.506373-.221692-2.683048 0-.778767.170533-1.773541.07958-.494545.54002-.494545.24443 0 .409278.159164.164849.15348.164849.39791 0 .261483-.08527.83561-.07958.574127-.07958.875402 0 .949298.06253 1.625745.06253.676446.187586 1.085725.187586.102319.369487.159164.181902.05116.358119.05116.761713 0 1.608692-.24443l-.0057-1.153938-.01137-1.102778q0-1.227836.108004-2.131659.06253-.522967.551389-.522967.24443 0 .409278.159164.164849.159164.15348.39791zm-3.54708-5.002293q.744659 0 .744659.596864 0 .170533-.250114.329697-.227377.14211-.426332.14211-.699184 0-.699184-.585495 0-.164848.210324-.324012.216008-.159164.420647-.159164zm3.063904-.04548q.193271 0 .392225.181902.198955.176217.198955.34675 0 .522967-.812872.522967-.233062 0-.414963-.119373-.204639-.136426-.204639-.358119 0-.392225.255799-.505913.14211-.06821.585495-.06821z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207868"/><path d="M28.917593 36.326251q-.03979.710553-.568442.710553-.488861 0-.488861-.562758 0-.108004-.01705-.39791l-.01705-.477491q-.898139.108004-1.43816.505914-.505913.369487-.841294 1.114147l.01137 3.115064q0 .574127-.562758.574127-.50023 0-.50023-.574127v-3.990466q0-.187586.01137-.562758.01705-.375172.01705-.562758 0-.574126.50023-.574126.557073 0 .562758.943614 1.091409-1.051618 2.421564-1.051618.460439 0 .687815.346749.227377.34675.227377 1.045934 0 .29559-.0057.39791z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207870"/><path d="m34.766865 38.077054-.130741 1.909966q-.03411 1.136885-.233062 1.858806-.255799.920877-.818557 1.358578-.68213.528651-1.972495.528651-.756028 0-1.267626-.102319-.716238-.142111-.716238-.591181 0-.505913.494545-.505913.20464 0 .682131.09663.477492.10232 1.057303.09095 1.091409-.01705 1.506372-1.057303.272853-.6935.289906-2.131659-.306959.568442-.733291.852664-.420647.284221-.966352.284221-1.028881 0-1.676905-.699184-.64234-.704869-.64234-1.8247 0-1.534795.881086-2.472725.909508-.966352 2.478409-.966352.528651 0 .88677.136426.358119.136427.545704.409279.608234.01705.608234.676446 0 .403594-.119373 1.080041-.130742.78445-.15348 1.068672zm-1.8247-2.461356q-1.08004 0-1.67122.74466-.528651.670762-.528651 1.705327 0 .824241.312643 1.239204.312643.414963.93793.414963.574127 0 1.114147-.648024.48886-.596865.557073-1.18236.119373-.613918.255799-1.92702-.227377-.176217-.471807-.261484-.24443-.08527-.505914-.08527z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207872"/><path d="M38.927863 40.788524q-1.28468 0-2.080499-.64234-.869717-.710553-.869717-1.989549 0-1.47795.716237-2.478408.778767-1.09141 2.0805-1.09141.943614 0 1.540478.318328.733291.392225.733291 1.205098 0 .568442-.64234 1.034565-.284221.204639-1.205098.636656l-2.17145 1.02888q.318328.471807.790135.710553.477492.238746 1.108463.238746.392225 0 .920877-.147795.670762-.187586.864032-.48886.19327-.306959.414963-.306959.198955 0 .352434.153479.159164.147795.159164.34675 0 .630971-1.017512 1.085725-.869717.386541-1.693958.386541zm-.153479-5.17851q-.6935 0-1.153938.54002-.460439.534336-.687816 1.614376l1.745118-.829926q1.028881-.500229 1.466582-.869716-.488861-.454754-1.369946-.454754z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207874"/><path d="M47.022482 40.930634q-.488861 0-.551389-.534336l-.159164-1.244888q-.07958-.665078-.07958-1.244889 0-.159164.01705-.54002.02274-.380857.02274-.540021 0-1.227835-.454754-1.227835-.636655 0-1.216467.756028-.522967.687815-.818557 1.739434-.01137.221692-.05116.557073-.03411.284222-.03411.551389 0 .170533.03411.511599.03411.341065.03411.511598 0 .255799-.159164.414963-.153479.159163-.397909.159163-.250115 0-.403595-.159163-.153479-.159164-.153479-.414963 0-.170533-.03979-.511598-.03411-.341066-.03411-.511599 0-.585495.07958-1.62006.08527-1.04025.08527-1.625746 0-.181901-.02274-.54002-.01705-.358118-.01705-.54002 0-.24443.159164-.39791.164848-.159164.403594-.159164.522967 0 .574127.738976l.01705.665077q.954983-1.273311 1.961126-1.273311.909508 0 1.267627.801504.24443.534336.267167 1.58027v.574127l-.0057.528651q0 .471807.119373 1.222151.125057.74466.125057 1.210782 0 .250115-.164848.403594-.159164.159164-.403594.159164z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207876"/><path d="M59.039353 35.439481q-.443385 1.853122-1.159622 4.18942-.159164.517283-.528652 1.062987-.198955.301275-.54002.29559-.619602-.011368-.966352-1.540478-.113689-.488861-.233062-1.330155l-.187586-1.267627-.466122 1.085725-.864033 2.347667q-.0739.216008-.216008.329697-.170532.329696-.545704.341065-.432017.01705-.835611-1.693958-.204639-.881086-.409278-2.387458l-.136426-.852664q-.0739-.511598-.0739-.858348 0-.238746.164848-.392225.170533-.159164.409279-.159164.432016 0 .534336.471807.0739.335381.119373.829926l.08527.83561.335381 2.552307q.630971-1.750803 1.307417-4.035941.187586-.630971.653709-.630971.44907 0 .608233.704868.147795.665078.369488 2.046393.227377 1.432475.403594 2.233978l.414963-1.546163.733291-3.098011q.08527-.34675.48886-.34675.238746 0 .414963.164849.176217.159163.176217.38654 0 .02842-.05684.261484z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207878"/><path d="M61.279017 33.33056q-.272852 0-.471807-.193271-.198955-.19327-.198955-.466122 0-.272853.198955-.466123.198955-.193271.471807-.193271.272853 0 .466123.193271.198955.19327.198955.466123 0 .272852-.198955.466122-.19327.193271-.466123.193271zm.255799 4.615752q0 .341065.01705 1.023196.02274.676446.02274 1.017512 0 .250115-.153479.409278-.153479.159164-.403594.159164-.24443 0-.403594-.159164-.15348-.159163-.15348-.409278 0-.341066-.02274-1.017512-.01705-.682131-.01705-1.023196 0-.534336.05685-1.330155.05684-.801504.05684-1.33584 0-.255799.153479-.414963.159164-.159164.403594-.159164.244431 0 .39791.159164.159164.159164.159164.414963 0 .534336-.05684 1.33584-.05685.795819-.05685 1.330155z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207880"/><path d="m64.911363 36.059083-.08527 2.825159q0 .449069-.04548 1.318786-.05684.568442-.557074.568442-.557074 0-.557074-.579811 0-.687815.06253-2.063446.06253-1.381315.06253-2.06913 0-.898139.02842-2.052077.02842-1.159622.02842-2.057761 0-.568443.557074-.568443.562757 0 .562757.568443 0 .898139-.02842 2.057761-.02842 1.153938-.02842 2.052077z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207882"/><path d="m68.09464 36.059083-.08527 2.825159q0 .449069-.04547 1.318786-.05684.568442-.557074.568442-.557073 0-.557073-.579811 0-.687815.06253-2.063446.06253-1.381315.06253-2.06913 0-.898139.02842-2.052077.02842-1.159622.02842-2.057761 0-.568443.557074-.568443.562758 0 .562758.568443 0 .898139-.02842 2.057761-.02842 1.153938-.02842 2.052077z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207884"/><path d="M21.79501 54.524875q-.403594 0-.528651-.432016-.130742-.466123-.238746-1.324471-.10232-.824241-.10232-1.352893 0-.147795.01137-.449069.01705-.301275.01705-.44907 0-1.068671-.534335-1.068671-.721922 0-1.290365.653708-.289905.335381-.795819 1.278996 0 2.165765-.181901 2.563675-.159164.352434-.494545.352434-.233062 0-.409279-.159164t-.176217-.386541q0-.07958.05116-.250114.04547-.142111.06253-.829926l.01705-.841295.01705-4.178051q.03979-.704869.03979-.949299 0-.289906-.05684-.545705-.05116-.261483-.05116-.54002 0-.238746.164848-.392225.164849-.159164.403594-.159164.466123 0 .545705.500229.09095.551389.09095.994774 0 .596865-.03979 1.244889-.03411.619602-.02842 1.244889l.0057.500229q.466123-.625286.994774-.932245.534336-.312643 1.131201-.312643.943614 0 1.296048.613917.250115.432017.284221 1.455213l.04548 1.085725.113688 1.18236q.07958.665077.193271 1.170991.02274.09664.02274.164848 0 .233062-.170532.386541-.170533.159164-.409279.159164z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207886"/><path d="M26.422131 54.433924q-1.28468 0-2.080499-.64234-.869717-.710553-.869717-1.989548 0-1.47795.716238-2.478409.778766-1.091409 2.080499-1.091409.943614 0 1.540478.318328.733291.392225.733291 1.205098 0 .568442-.64234 1.034565-.284221.204639-1.205098.636655l-2.171449 1.028881q.318327.471807.790134.710553.477492.238746 1.108463.238746.392225 0 .920877-.147795.670762-.187586.864032-.488861.19327-.306959.414963-.306959.198955 0 .352434.15348.159164.147795.159164.34675 0 .630971-1.017512 1.085725-.869717.38654-1.693958.38654zm-.153479-5.17851q-.6935 0-1.153938.540021-.460439.534335-.687816 1.614376l1.745118-.829926q1.028881-.500229 1.466582-.869717-.488861-.454754-1.369946-.454754z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207888"/><path d="m31.600641 49.704484-.08527 2.825158q0 .44907-.04548 1.318787-.05684.568442-.557073.568442-.557074 0-.557074-.579811 0-.687815.06253-2.063446.06253-1.381315.06253-2.06913 0-.898139.02842-2.052077.02842-1.159623.02842-2.057762 0-.568442.557073-.568442.562758 0 .562758.568442 0 .898139-.02842 2.057762-.02842 1.153938-.02842 2.052077z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207890"/><path d="M35.755955 54.371396q-.568443 0-1.250574-.181902l-.01137 2.717155q0 .250114-.159164.409278-.15348.159164-.39791.159164-.24443 0-.403594-.159164-.15348-.159164-.15348-.409278l.01705-2.27377v-2.268085q-.01705-1.244889-.08527-2.268085l-.08527-1.153938q0-.403594.147795-.682131.170533-.335381.494545-.335381.221692 0 .369487.159164.15348.153479.15348.380856 0 .05116-.01705.187586-.02842.176218-.03979.324013.48886-.335381.943614-.50023.454754-.170532.869717-.170532 1.165307 0 1.705327 1.034565.426332.818557.426332 2.165765 0 1.227836-.659393 2.023655-.699185.841295-1.864491.841295zM36.14818 49.443q-.522967 0-.943614.233062-.301275.164848-.761713.602549.0739 1.290364.0739 2.71147.619602.238746 1.239205.238746.710553 0 1.085725-.528652.324012-.460438.324012-1.193729 0-1.034565-.255799-1.546163-.250118-.517283-.761716-.517283Z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207892"/><path d="M47.68756 50.852737q0 .409279.0057 1.227836t.0057 1.227835q0 .125058.01705.380857.02274.255799.02274.380856 0 .24443-.164848.39791-.164849.159164-.403594.159164-.437701 0-.557074-.540021-.710553.369488-1.637114.369488-.74466 0-1.23352-.329697-.54002-.363803-.64234-1.062987-.221692-1.506372-.221692-2.683048 0-.778766.170532-1.77354.07958-.494545.540021-.494545.24443 0 .409278.159164.164848.153479.164848.39791 0 .261483-.08527.83561-.07958.574127-.07958.875401 0 .949299.06253 1.625745.06253.676447.187586 1.085725.187586.10232.369487.159164.181902.05116.358119.05116.761713 0 1.608692-.24443l-.0057-1.153938-.01137-1.102778q0-1.227836.108004-2.131659.06253-.522967.551389-.522967.24443 0 .409278.159164.164849.159163.15348.397909z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207894"/><path d="M52.934284 49.795435q-.312644 0-.437701-.210324-.08527-.147795-.147795-.613918-.426332.108004-1.313102.39791-.915192.363803-.920876.898139.170532.06253.335381.09095 1.307417.233061 1.944072.642339.926561.596865.926561 1.728065 0 .926561-.801503 1.398368-.665078.386541-1.68259.386541-.744659 0-1.421106-.250114-.875401-.318328-.875401-.88677 0-.227377.176217-.39791.181902-.170533.409279-.170533.176217 0 .454754.272852.136426.130742.613917.216009.380857.06821.64234.06821.477492 0 .841295-.113689.528651-.164848.528651-.522967 0-.773081-1.08004-1.045934l-.59118-.130741q-.756028-.164849-1.074356-.386541-.460439-.318328-.460439-.960668 0-1.188044 1.119832-1.693958.341065-.15348 1.091409-.363803.750344-.216008 1.074356-.363803.233062-.10232.505914-.10232.24443 0 .39791.159164.159164.159164.159164.414963 0 .164848.06821.483176.0739.318327.0739.483176 0 .255799-.159164.414963-.153479.159164-.397909.159164z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207896"/><path d="M56.588337 54.701092c-.19706 0-.363803-.06821-.500229-.204639-.136427-.136426-.20464-.303169-.20464-.500229 0-.193271.06821-.358119.20464-.494545.136426-.140216.303169-.210324.500229-.210324.19327 0 .358118.07011.494545.210324.140215.136426.210323.301274.210323.494545 0 .19706-.07011.363803-.210323.500229-.136427.136426-.301275.204639-.494545.204639z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207898"/><path d="M59.49876 54.701092c-.19706 0-.363803-.06821-.500229-.204639-.136426-.136426-.204639-.303169-.204639-.500229 0-.193271.06821-.358119.204639-.494545.136426-.140216.303169-.210324.500229-.210324.19327 0 .358119.07011.494545.210324.140216.136426.210324.301274.210324.494545 0 .19706-.07011.363803-.210324.500229-.136426.136426-.301275.204639-.494545.204639z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207900"/><path d="M62.409187 54.701092c-.19706 0-.363803-.06821-.500229-.204639-.136426-.136426-.204639-.303169-.204639-.500229 0-.193271.06821-.358119.204639-.494545.136426-.140216.303169-.210324.500229-.210324.19327 0 .358119.07011.494545.210324.140216.136426.210324.301274.210324.494545 0 .19706-.07011.363803-.210324.500229-.136426.136426-.301275.204639-.494545.204639z" style="font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS';stroke-width:.275437" id="path207902"/></g></g><script id="script28585" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script><script id="script22621" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script><script id="script27499" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script><script id="script1161902" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script></svg>