<svg id="svg5" version="1.1" viewBox="0 0 232.8333 190.50001" height="720" width="880" xmlns="http://www.w3.org/2000/svg"><defs id="defs2"><clipPath clipPathUnits="userSpaceOnUse" id="clipPath2172"><path id="path2174" style="fill:red;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:.264583" d="M131.56509 3.3150432V72.379562h81.69941V3.3150432Zm4.36201 16.0920408c.90316.005 1.24567 1.992801 1.69757 3.526917 1.38773-.09413 2.44301.03435 1.80248 1.330667-.0295.05978-.0603.119182-.093.177251.0712-.05652.14509-.12368.22221-.202055.0199-.02025.0335-.05035.0599-.06098.0322-.013-.0466.05164-.0692.07803-.0775.09058-.15667.179401-.23617.268201.002-.0015.008-.0068.006-.0047-.0547.07266-.11513.141074-.17364.21084.0714-.0912.13395-.188616.19069-.289388-.89253.708171-1.338-.246928-1.70946-1.507918-2.0517.139166-4.83014.765391-3.93102-1.174089.14692-.316901.30789-.627864.53227-.898653.14627-.180666.29478-.359228.44648-.535368.16072-.162369.29164-.354316.4594-.510563h.00053c.30731-.286234.56849-.409495.79479-.408244zm-.0827 9.120892c1.96001-.0066 4.16793 1.747861 3.39721 3.969781-.16417.473298-.32598.947127-.48834 1.421104-.12545.371398-.0636.187566-.18604.552421-1.13996 3.397544-7.07208 1.406909-5.93194-1.990577.12955-.385926.0632-.189682.19844-.589629.19647-.57353.38899-1.148429.59893-1.717207.42658-1.155679 1.38506-1.642411 2.41174-1.645893z"/></clipPath><filter style="color-interpolation-filters:sRGB" id="filter1095" x="-.06505849" y="-.07641596" width="1.1301171" height="1.1528319"><feGaussianBlur stdDeviation=".01" result="blur" id="feGaussianBlur1089"/><feComposite in="SourceGraphic" in2="blur" operator="in" result="composite1" id="feComposite1091"/><feComposite in="composite1" in2="composite1" operator="in" result="fbSourceGraphic" id="feComposite1093"/><feColorMatrix result="fbSourceGraphicAlpha" in="fbSourceGraphic" values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0" id="feColorMatrix1115"/><feGaussianBlur id="feGaussianBlur1117" stdDeviation="1.71" result="blur" in="fbSourceGraphic"/><feComposite in2="blur" id="feComposite1119" in="fbSourceGraphic" operator="in" result="composite1"/><feComposite in2="composite1" id="feComposite1121" in="composite1" operator="in" result="composite2"/></filter><path id="rect36013" d="M712.10175 315.47656h136.15944v44.981243H712.10175z"/></defs><g id="layer5" style="display:inline"><path style="fill:#fff;stroke:none;stroke-width:.443256;-inkscape-stroke:none;stop-color:#000" id="rect2071" d="M-15.822089-12.657672h258.03253v220.35857h-258.03253z"/></g><g id="g1131" style="display:inline" transform="translate(.61359839 -3.4077051)"><g id="g1041" transform="translate(-15.301955)"><path style="display:inline;fill:#000;stroke-width:.529167" d="M136.16414 190.58128c0-.29104.25218-.52916.5604-.52916s.41322.23812.23335.52916c-.17988.29104-.43206.52917-.5604.52917s-.23335-.23813-.23335-.52917zm-27.51668-.38892c0-.28369 2.78666-.67071 6.21772-.86354 13.37969-.75195 16.53646-1.03238 16.53646-1.46902 0-.24943-1.53928-.45352-3.42062-.45352-3.17705 0-6.13422.2444-19.33356 1.59785-10.142431 1.03999-16.933392 1.25726-16.933392.54176 0-.36594.3156-.54423.701327-.39621.513277.19696 14.091135-.86006 15.041425-1.17095.0728-.0238.13229-.28141.13229-.57245 0-.71384-6.19424-.68017-6.63691.0361-.19214.31089-.66706.44333-1.055377.29431-.38832-.14901-.796647.001-.907377.33307-.147507.44254-.642764.42115-1.852708-.08-1.519981-.62961-7.431098-.48892-12.301831.29279-3.016776.48417-11.658907.5823-11.935026.13553-.164051-.26543.71591-.4826 1.95546-.4826 1.63908 0 2.09498-.15875 1.67165-.58208-.72667-.72667-2.51074-.69366-10.34521.19142-3.41974.38634-6.217711.53415-6.217711.32848 0-.45521 1.878011-.76165 11.08582-1.80897 3.91438-.44523 7.23226-.9247 7.373051-1.0655.91995-.91994-1.39554-1.09573-6.02345-.45728-11.20463 1.54575-12.17725 1.66129-12.39132 1.47212-.54088-.47801.76211-.75966 8.18701-1.76966 4.34966-.59169 8.3036-1.30138 8.78654-1.57709.482929-.27572 1.73894-.36161 2.791129-.19086 1.56594.25412 1.85624.48955 1.59983 1.29743-.27066.85278-.0206.98699 1.839066.98699h2.152328v-4.23333c0-2.32834.21036-4.23334.467447-4.23334.674057 0 1.104514 1.97386 1.112834 5.10276.005 1.95591.23614 2.80936.821007 3.03379.967084.37111.945364.43731 2.060678-6.28213 1.048234-6.31528 2.239495-8.32568 1.569181-2.64817-.24054 2.03729-.445787 4.77573-.456117 6.08542-.0187 2.37056-.0101 2.38173 1.908708 2.48843 1.708971.095 1.958968-.055 2.205158-1.32292.15272-.78655.237847-7.62134.189177-15.18843l-.0885-13.75833-4.076559-.26458c-2.242115-.14552-4.327683-.5166-4.634613-.82461-.306917-.30802-1.047334-1.95213-1.645341-3.65359-1.227971-3.49379-1.142684-5.61011.651247-16.1593 1.637291-9.6281 2.539385-15.22754 3.324762-20.63751.815544-5.61764 2.208318-13.376933 2.738115-15.254147.439757-1.558224 2.145355-2.20836 5.7935-2.20836 2.961652 0 3.490252-.418938 2.043538-1.619598-1.385074-1.149519-2.787495-4.403344-2.514158-5.833244.16016-.83779-.0578-1.603796-.579604-2.036842-.45997-.381739-.82874-1.081631-.81948-1.555318.0139-.712927.15535-.678985.82119.197086.781144 1.027819.880804.97835 3.456459-1.715784 1.458667-1.525765 2.497387-3.024477 2.308267-3.330472-.18912-.305995-.0705-.885759.26367-1.288366.45782-.551628.45229-1.250131-.0224-2.834571-1.37907-4.602892 1.3162-11.016377 5.3397-12.705999 1.20485-.505963 2.09538-1.241676 2.09848-1.733653.003-.470074.51303-1.500041 1.13348-2.288816.90103-1.145472 1.40696-1.36456 2.51355-1.088468 1.96052.48915 3.23753 1.797926 3.23753 3.318078 0 .716834.70435 2.105551 1.56524 3.086037 2.11768 2.411912 2.9205 5.526506 2.18125 8.462339-.92387 3.669023-.72878 6.935299.48685 8.150925.58208.582083 1.24347 1.058333 1.46975 1.058333.99143 0 2.92039-1.876491 4.85018-4.718229 2.27293-3.347043 4.28264-4.612064 8.17456-5.14551 5.65814-.775534 10.75798 3.607926 12.52963 10.769566.93348 3.773429 2.31892 4.342304 1.82476.749257-.4053-2.946869.45019-6.480223 1.88292-7.776822.51483-.465915 1.84751-.968465 2.9615-1.116777 1.78879-.238152 2.16267-.0834 3.19989 1.324447 1.9038 2.584079 2.98062 8.500715 2.64747 14.546594l-.28725 5.213084 2.466-.17593c2.19744-.15677 2.45528-.06067 2.36756.882403-.0541.582084.46022 4.153959 1.14301 7.937517.6828 3.78354 1.52032 9.02229 1.86117 11.64166.34084 2.61938 1.18116 8.21531 1.86738 12.43542.68621 4.2201 1.54048 10.49689 1.89836 13.94841.57714 5.56606.5543 6.46338-.20202 7.9375-.46899.9141-.93295 2.13826-1.03102 2.72034-.16814.99801-.53631 1.05059-6.45957.92251l-6.28127-.13583.40802 7.01499c.22441 3.85825.49385 10.825.59875 15.48166.1049 4.65667.19512 8.53948.20047 8.62847.005.089.62599-.50633 1.37917-1.32292 1.29941-1.40882 1.37378-1.18602.40545 1.21479-.24554.60878-.0877.79505.56029.66145.59019-.12166 1.35351-1.52909 2.20768-4.07054 1.47256-4.38141 3.32814-8.26457 3.74841-7.8443.15396.15396-.45796 2.65504-1.35983 5.55795-.90187 2.90291-1.63976 5.53846-1.63976 5.85677 0 .31831.83344.57875 1.85209.57875 1.4552 0 2.30565-.45357 3.96875-2.11667 2.49361-2.49362 3.15431-2.72956 1.62353-.57977-1.35856 1.90792-1.36287 2.16727-.036 2.16727 1.65831 0 1.23922.9812-.62547 1.46439-.92609.23997-1.77937.72303-1.89618 1.07346-.33112.99338 1.73598.7528 3.75198-.43667l1.82-1.07383.27016 1.73529c.14859.9544.1171 1.89325-.07 2.08633-.18707.19308-3.71164.4928-7.8324.66605-7.31772.30766-7.48581.29023-7.21433-.74793.2164-.8275.72012-1.06292 2.27429-1.06292 1.14893 0 2.50596-.41268 3.19695-.9722 1.19699-.96927 1.19099-.9723-1.98533-1.00222-3.676-.0346-4.4795.31889-4.65622 2.04858-.0702.68681-.15798 1.3767-.19513 1.53307-.0371.15638-.78191.33875-1.65503.40528-1.2789.0975-1.5875-.0864-1.5875-.94578 0-1.25905-.45032-1.36433-1.26458-.29567-.32846.43108-1.81247.87983-3.36563 1.01774-2.47392.21967-2.77812.13523-2.77812-.77106 0-.55976-.23813-1.01774-.52917-1.01774s-.52917.23812-.52917.52917c0 .3061-1.6861.52916-3.99998.52916-2.5319 0-3.87994-.19421-3.67293-.52916.17987-.29105 1.74174-.52917 3.47081-.52917 2.0044 0 3.14377-.2191 3.14377-.60455 0-.4246-.96822-.50335-3.25262-.26459-1.78895.18698-4.18425.33997-5.3229.33997-1.1824 0-1.93614.21703-1.75751.50606.17201.27833.63823.38116 1.03603.2285.39781-.15264.86964-.0407 1.04853.24873.402.65045-2.88873 1.01372-12.65361 1.39687-4.07459.15988-9.37287.43228-11.77397.60535-2.68825.19377-4.36563.11714-4.36563-.19943zm44.25697-1.98827c1.695-1.695-1.28994-2.63089-3.27769-1.02767-.98598.79523-.96881.8194.42802.60254.9855-.15299 1.45521.007 1.45521.49445 0 .93207.41363.91151 1.39446-.0693zm-71.341609-1.0437c-.96898-.80943-2.53664-1.26014-2.81521-.8094-.35911.58106 1.84479 1.62204 2.55063 1.20475.23764-.14049.35671-.3184.26458-.39535zm32.085269.25311c.62807-.004.83515-.19209.52917-.47963-.64383-.60502-3.94229-.10788-3.94229.59419 0 .29225.53512.38742 1.19062.21175.65485-.17549 1.65497-.32233 2.2225-.32631zm-27.738399-.80097c-.0246-.79152-2.273028-.63859-2.543565.17301-.16351.49053.18702.65003 1.162984.52916.768374-.0951 1.389631-.41113 1.380581-.70217zm36.594279-.98274c.84921-1.5946 2.17299-2.49368 2.78579-1.89205.31683.31105.26791.72834-.13229 1.12854-1.1189 1.1189-.69136 1.48167 1.74625 1.48167 2.23623 0 3.05098-.58196 1.85209-1.32292-.29105-.17987-.52917-1.02736-.52917-1.88331 0-2.22678 1.37452-1.99237 2.51037.4281 1.39779 2.97867 3.07403 2.91774 5.40579-.1965 1.9828-2.64816 2.96764-2.32262 1.06347.35155-.63667.89412-1.00113 1.78214-.8099 1.97337.75987.75987 2.23833-.9046 4.0011-4.50448 1.01865-2.08023 2.04147-3.79562 2.27294-3.81195.58005-.0409-.13055 3.60905-1.05976 5.44344-.86055 1.69884-.64802 2.3733.36371 1.15424.36815-.4436.91912-.80654 1.22436-.80654.30525 0 .99047-.39409 1.52271-.87577 1.32331-1.19758 1.22779-.13212-.11762 1.312-1.32333 1.42043-.94134 2.2096 1.06952 2.2096 1.0273 0 1.93577-.50692 2.84503-1.5875 1.64342-1.95309 2.05796-2.0039 1.60436-.19664-.31042 1.2368-.24069 1.3302.62948.84323.57123-.31968.98768-1.15454 1.00046-2.00562.0334-2.22458 1.07513-2.09383 1.99602.25053.67625 1.72158 1.02341 2.04497 1.93838 1.80571 1.01873-.26641 1.11458-.6637 1.11458-4.61966v-4.32818l-18.65313-.0138c-32.65704-.0241-40.308905-.18947-39.641601-.85678.670477-.67047 56.749841-.58917 57.892261-.38943.4163.0728.42282-8.02727-.147-20.91645-.0434-.98221 1.50138 1.43809.32586 1.37098l-1.35355.12778-18.37678-.13988c-10.12586.0348-23.1848.0657-29.01989.0687l-10.609272.006.0259 15.29071c.0256 15.14757.0362 15.29072 1.131494 15.29075.608074.00002 1.864008-.83341 2.790968-1.85205.92695-1.01865 1.90248-1.85209 2.16784-1.85209.26536 0 1.01781-.9525 1.67212-2.11666 1.17697-2.09413 2.51088-2.9784 1.79606-1.19063-.20365.50933-.50281 2.32259-.6648 4.02949-.2924 3.08118-.28541 3.10068.97513 2.71865.69829-.21164 1.49585-.59616 1.77234-.85449.27649-.25833.99087-.47091 1.58751-.4724.59664-.002 2.03729-.58937 3.20146-1.3064 2.46895-1.52067 2.91042-1.60844 2.91042-.57863 0 .41695-.45475.90242-1.01055 1.07883-.5558.1764-1.29934.6687-1.65229 1.09399-1.15355 1.38993 1.51032.91554 2.95148-.52561.71437-.71438 1.29886-1.16424 1.29886-.99971 0 .16454.46833-.263 1.04073-.9501.83703-1.00473 1.04417-1.07539 1.05833-.361.01.48854-.33958 1.24543-.77614 1.68199-1.07163 1.07164-.99948 1.39852.30868 1.39852 1.75934 0 .86595 1.30341-1.02094 1.48948-.92899.0916-1.5833.33773-1.45401.54693.12929.20919 1.21065.28731 2.40302.1736 1.5427-.14712 2.34212-.53378 2.77183-1.34067zm-24.439898-21.93432c0-.89102 9.630058-1.26178 33.922558-1.30603 22.17573-.0404 23.50232.0103 23.67464.90484.17407.90366-.84503.92909-21.96042.54819-12.17863-.21968-22.50015-.40829-22.93672-.41912-.43656-.0109-3.47267.16222-6.74691.38455-3.79614.25778-5.953148.21704-5.953148-.11243zm58.737568 22.86045c0-.55802-.28776-.73994-.83703-.52917-.46037.17666-.95067.3212-1.08956.3212-.1389 0-.10537.23812.0745.52917.5211.84315 1.85208.61233 1.85208-.3212zm-67.733397-.20797c0-.29104-.238127-.52917-.529177-.52917-.291037 0-.529157.23813-.529157.52917s.23812.52917.529157.52917c.29105 0 .529177-.23813.529177-.52917zm5.33811-.50047c-.736867-.4554-3.828109-.053-3.512749.45723.124877.20206 1.101384.26532 2.170018.14056 1.068614-.12475 1.672848-.39376 1.342731-.59779zm9.028787-.82245c0-.27649-.25599-.58803-.56886-.69232-.31288-.1043-.56886.20725-.56886.69232 0 .48507.25598.79662.56886.69233.31287-.10429.56886-.41584.56886-.69233zm20.55817-33.33489c4.51114.002 16.52861-.18627 26.70547-.0862 15.19366.14945 18.53767.32507 18.69505-.261.10541-.39259.1511-1.01394.2656-1.38081.1145-.36685.0746-.83557.01-1.04158-.16947-.53879-82.817267-.6301-82.817267-.0918 0 .24701-.03857 1.09863.439312 2.05658l.868884 1.74173 13.815501-.4698c7.59856-.25839 17.50648-.46864 22.01763-.4672zm5.46855-5.00471 40.86398-.16424-.0173-1.13537c-.0234-1.53894-.8673-6.57481-1.89512-14.86523-.32473-2.61938-.79584-5.59594-1.04688-6.61458-.25105-1.01865-.58959-3.16178-.75232-4.76251-.71385-7.02182-1.20908-8.87011-1.65669-12.28823-.25927-1.97984-.87467-5.05196-1.05547-6.879173-.18079-1.827203-.44376-3.441251-.58436-3.586771-.1406-.145521-2.31908-.294877-4.84106-.331902-2.52198-.03703-6.83207-.205802-9.57797-.375059-4.45578-.274653-5.06592-.202977-5.67504.66667-1.1523 1.645135-4.82721 1.860362-7.88057.461538-2.39014-1.094987-3.4031-1.200688-11.61435-1.211923-5.9209-.0081-9.68614.218615-11.01536.663271-1.11074.371571-2.222.550449-2.46946.397508-.24747-.153073-.44461 2.878743-.43809 6.737251.006 3.85849-.0941 7.37263-.22369 7.80919-.12955.43656-.42358 1.74625-.65341 2.91042-.62103 3.14575-2.33528 6.05157-3.58524 6.07731-1.08346.0223-3.53111-4.48174-3.8582-7.09964-.30722-2.45895.87606-9.6728 2.04902-15.931235.18411-.982356.207-1.107095-4.371126-1.231042-2.569273-.06956-4.96147.204537-5.448248.397729-.602699.239199-1.61763 3.097224-1.997888 5.946698-.003 1.91268-1.698891 13.84593-3.750859 26.39226-.970974 5.93677-2.452173 17.15188-2.463453 18.05052.347029.11211.43566.0434 1.289711.0651.807992.0205 20.016393-.098 42.669433-.099zm-20.28524-16.00676c-10.332021-.28393-18.884683-.61418-19.005953-.7339-.751837-.7422 1.828501-.94142 12.794493-.98783 6.7633-.0286 12.58963-.23525 12.94741-.45916.35779-.22391 1.07848-.17807 1.60154.10186 1.83297.98098 23.72503 1.47542 40.18656.90763 5.9542-.20537 8.4617.21587 8.93134.28584 3.91326.583.1133.73347-.18747.91921-.88521.54666-36.9217.52549-57.26792-.0337zm4.89481-18.29925c-1.23693-.0966-2.24896-.40009-2.24896-.6744 0-.29222 3.67017-.50014 8.86354-.50213 4.87495-.002 16.60261-.1379 26.06146-.30231 12.76285-.22184 18.14092.22743 19.1339-.10953.35602-.12082.0289 1.0975.0815 1.23858.16603.44272-48.01535.65256-51.89144.34982zm-22.357362-.7084c0-.51048 2.992085-.99391 6.151577-.99391 3.035955 0 4.012565.99726 1.124471 1.14825-4.173346.2182-7.276048.15238-7.276048-.15434zm17.695802-16.425063c1.38021.109772 2.92173-.150789 3.90729-.660445.89526-.462958 2.59797-.841742 3.7838-.841742 1.82074 0 2.23535-.20859 2.66599-1.341272.28048-.7377.46679-1.511606.41403-1.719792-.0528-.208185.0914-2.245053.32024-4.526371.38269-3.814255.32757-4.230384-.68531-5.174022-1.56185-1.455083-1.90428-3.405023-1.19824-6.823292.80473-3.896142.77359-5.301967-.16729-7.553821-1.28748-3.08138-3.20038-4.222643-6.66252-3.974964-3.66487.262182-5.81556 1.700988-7.38327 4.939408-1.04197 2.152427-1.12099 2.884859-.78457 7.272348.29555 3.854444.60381 5.12842 1.46813 6.0674 1.35707 1.474312.78597 2.249425-.67993.922812-1.04486-.945587-1.10988-.931676-2.69463.576508-2.322644 2.210438-2.811231 3.284839-1.966437 4.32421.600147.738402.570537.81119-.21092.518452-2.351375-.880829-1.596271 3.301511 1.045987 5.793479 1.23471 1.164472 2.38501 1.75725 3.40999 1.75725 1.15621 0 1.52297.233823 1.45255.926042-.0518.509323-.0521 1.640417-.00063 2.513542.0874 1.482221.14639 1.429514.88988-.794765.79583-2.38087.79763-2.382158 3.07584-2.200965zm29.4001-.443854c0-.873125.23813-1.5875.52917-1.5875s.52917.483724.52917 1.074942c0 1.238864 1.39717 1.972884 2.20935 1.160707.84062-.840627-.47674-4.232836-2.04215-5.258534-1.04709-.686074-2.7614-.876842-8.15337-.907299-3.75512-.02121-6.82818-.187394-6.829-.369295-.005-1.066185 11.04824-1.370976 14.54213-.401002 2.11417.586935 3.46264 1.900012 4.00096 3.895973.31435 1.165515 1.95954 1.484261 10.40262 2.015445l4.34095.273105.32222-2.197229c.17723-1.208476.24786-3.983167.15697-6.165979l-.16527-3.96875-2.01717-.16619c-2.31984-.191126-2.43309-1.323721-.15918-1.591818 1.14397-.134876 1.4119-.411338 1.28211-1.322917-.16947-1.190215-1.35077-1.425296-3.2068-.63816-1.54733.656215-1.03408-.486827.67079-1.493919 1.65921-.980116 1.67881-1.930746.0398-1.930746-1.71578 0-2.89954 3.685686-2.50429 7.797157.18928 1.968959.49843 4.149055.687 4.844656.32934 1.21494.26153 1.250685-1.72263.907945-5.01818-.866832-4.85652-.778463-4.75237-2.597684.10821-1.890209-.75708-5.129705-1.99672-7.47541-2.50959-4.748742-7.18373-7.103122-11.82208-5.954828-2.13444.528412-2.81908 1.038485-4.38871 3.269686-1.02287 1.453983-2.83821 3.620458-4.0341 4.81439l-2.17433 2.170785-.25513 5.298035-.25511 5.298034 5.33987.432318c2.93694.237776 6.21774.43861 7.29069.446299 1.42474.01021 2.01786.270343 2.19942.964631.4294 1.642031 1.93518 1.146494 1.93518-.636848zm12.91804-11.328763c-.2248-2.480792-.13487-4.552637.2449-5.642058.72199-2.071096.41062-2.653094-.50456-.94308-.7755 1.449035-.93174 5.303881-.31321 7.727443.42576 1.668198.3891 1.719792-1.22185 1.719792-.97244 0-1.52523.219324-1.33373.529167.17987.291041 1.03729.529166 1.90538.529166h1.57833zm-39.1945-23.705419c.16792-.642133.17623-1.296603.0185-1.454376-.4149-.414897-1.80697 1.633654-1.47506 2.170684.49471.800463 1.14338.481469 1.45661-.716308zm28.57557 130.159999c.76543-.48678 5.9441-.53429 5.45989-.0501-.19519.19519-1.64106.37379-3.21305.39688-1.57198.0231-2.58306-.13297-2.24684-.34679zm36.33006-13.58132c-3.90482-.52048-2.20467-1.37573 2.73479-1.37573 4.61026 0 6.10226.43034 4.65822 1.34358-.83696.52931-3.57379.54121-7.39301.0321zM66.0694 172.62183c-.18066-.29232.0849-1.16238.59014-1.93347.815691-1.2449.95615-1.29498 1.25363-.44695.23238.66248.45359.76317.7221.3287.48592-.78623 2.78755-.82123 3.26443-.0496.4416.71453 3.73698.17485 5.37597-.88042 1.44604-.93105 2.318071-.97208 1.97973-.0932-.1898.49303.49506.6149 2.6896.47862 3.224637-.20026 5.535742.19677 5.535742.95101 0 .97842-2.093048 1.12378-3.443209.23912-1.293694-.84766-1.565241-.84785-4.603112-.003-2.15219.59836-3.404711.72116-3.75748.36839-.35277-.35277-.87093-.34625-1.55444.0195-.72497.38799-1.47023.36441-2.54439-.0805-1.30636-.54111-1.77546-.47079-3.34967.50212-1.11565.68951-1.95885.92379-2.15904.59987zm-6.10533-2.16593c0-.56288 2.20438-1.6102 2.60721-1.23872.260911.24061-1.617179 1.74296-2.210329 1.76811-.21828.009-.396881-.22897-.396881-.52939zm105.41007-.0888c-.75792-.75792-.84024-2.01084-.13213-2.01084.27658 0 .72258.3926.99111.87244.4924.87986 1.57195.85637 6.17894-.13448 2.0801-.44738 1.1676.49165-1.26959 1.30649-2.33951.78218-4.96786.76686-5.76833-.0336zm12.59417.10583c0-.29104.37124-.52917.82498-.52917.45374 0 .67781.23813.49793.52917-.17987.29104-.55111.52917-.82498.52917-.27386 0-.49793-.23813-.49793-.52917zm6.61458 0c.17987-.29104.43205-.52917.5604-.52917.12834 0 .23335.23813.23335.52917s-.25218.52917-.5604.52917-.41323-.23813-.23335-.52917zm-8.73125-1.83347c0-.83379 2.00859-2.15516 2.51152-1.65223.35557.35556-1.40641 2.42737-2.06437 2.42737-.24593 0-.44715-.34882-.44715-.77514z" id="path1129"/><path style="display:inline;fill:#e96149;fill-opacity:1;stroke:#000;stroke-width:.495059;-inkscape-stroke:none;stop-color:#000" d="M85.628574 146.56953c-.13847-.22786 1.108244-8.94207 3.236912-22.62529 1.880548-12.08829 2.643135-17.55035 2.990312-21.41825.281887-3.140514 1.017734-5.642623 1.779301-6.0502.981704-.525391 9.680061-.384514 9.698401.09935.0917.239064-.20059 2.26523-.64962 4.5026-2.07612 10.34457-1.80535 14.0421 1.335 18.23064 1.02225 1.36345 1.82611 1.34613 2.90055-.0625 2.11795-2.77677 3.10147-7.69288 3.10792-15.53479.002-2.99315-.0477-6.1922.0541-6.571216.32655-1.216472 3.81119-1.433879 14.0223-1.433879 8.90694 0 9.02483.279675 10.80622 1.089431 1.45164.659839 2.32095.818652 4.48109.818652 2.50114 0 2.74517-.06238 3.65544-.934484l.9754-.934485 8.13316.239898c4.47323.131942 8.82775.215684 9.64058.310804l1.47358.172443.64541 4.750806c.34292 2.52422.88064 5.72001 1.12677 7.11144.24613 1.39144.38253 2.58692.30312 2.65664-.0794.0697-1.24957.002-2.60034-.1515-2.66588-.30202-49.65528.21739-50.54475.55871-.75548.2899-.67104.68005.19758.91283.97842.26221 45.64034.19612 49.93818-.0739 2.15958-.13568 3.35775-.0941 3.35944.11657.009 1.0781 1.10269 9.40534 1.63481 12.44352.79412 4.53419 3.03797 21.46624 2.86733 21.63689-.19047.19047-84.452729.32926-84.568166.13929zm82.549786-15.99759c1.17058-1.17101.25467-1.02198-21.88869-1.0444-16.28471-.0165-23.68129-.29765-25.78803-.62964-3.24995-.51216-2.18624-.49786-15.71817-.21122-12.588825.26667-14.735783.41392-14.735783 1.01061 0 .32588 1.138834.48549 4.666323.65399 17.63684.84245 72.68727.99803 73.46435.22066zm-67.53992-19.02177c.18455-.18455.23809-.433.11898-.55211-.64268-.64267-7.692548-.45968-8.760842.22741-.41359.266-.41153.35103.0159.65473.616494.43806 8.145972.14998 8.625992-.33003z" id="path4202"/><path style="display:inline;fill:#e96149;fill-opacity:1;stroke:#000;stroke-width:.495059;-inkscape-stroke:none;stop-color:#000" d="M118.9515 186.4075c.85841-.24424 1.65024-.53357 1.75963-.64295.42456-.42456-.22962-1.20952-1.00799-1.20952h-.81907l.80879-1.19181c.8101-1.19375.98107-1.80136.611-2.17143-.10878-.10878-1.15167.61142-2.31753 1.60046-1.16586.98903-2.4972 1.94174-2.95852 2.11713-1.62197.61668-1.35377-.35483.33708-1.22102 1.21393-.62187 1.5397-1.03144 1.30562-1.64146-.25785-.67193-.87582-.53786-3.11615.67605-1.13184.61329-2.5736 1.22251-3.20391 1.35382-.6303.13131-1.76909.54147-2.53065.91146-.76156.36999-1.47421.58315-1.58368.47368-.19665-.19665.2676-4.61613.71044-6.76317.32466-1.57403-.38872-1.23608-1.88125.89121-1.43952 2.05172-5.703314 5.94747-6.509361 5.94747-.318517 0-.660907-.21312-.760854-.47359-.0999-.26048-.28624-7.03893-.41398-15.06322l-.232247-14.58963h58.264702l.26744-.0543c.71686-.14568.46121.0119.64747 5.62119.13455 4.05233.19639 8.74408.13741 10.42611l-.10724 3.05823-28.65286.0526c-16.04218.0295-28.851581.18069-29.104301.34357-1.428181.92045 1.180774 1.02042 29.349901 1.12454l28.57099.10561v4.02942c0 3.14117-.10585 4.11728-.48018 4.42795-.7374.61198-1.22748.26949-2.13-1.48856-1.06231-2.0693-2.0283-2.21977-2.33012-.36297-.11176.68762-.44582 1.49282-.74234 1.78934-.50052.50053-.53912.45204-.53912-.67716 0-.66895-.0952-1.21629-.21164-1.21629-.1164 0-.92055.66311-1.787 1.47358-1.24336 1.16301-1.81581 1.47358-2.7162 1.47358-1.54909 0-1.72485-.46898-.71948-1.91974.8508-1.2277 1.07957-2.0098.58789-2.0098-.14408 0-.40196.13507-.57305.30016-.29198.28171-3.42217 2.0054-3.42181 1.88427.00009-.0308.28028-.79291.62265-1.69367.34236-.90076.72741-2.3375.85566-3.19275.37221-2.48202-.51661-2.00747-2.14748 1.14655-1.81083 3.5021-3.17281 5.48498-3.76745 5.48498-.65462 0-.59917-.31782.28669-1.64316 2.00788-3.004 1.13555-3.27365-1.55085-.47939-2.41595 2.51296-3.16383 2.65283-4.34556.8127-1.45095-2.25936-1.78195-2.61969-2.4064-2.61969-1.10298 0-1.27407 2.99026-.21059 3.68066.64925.42148-.45305.89328-2.09988.89879-1.83478.006-2.04883-.17556-1.39051-1.18028.41256-.62965.43341-.87852.10659-1.27231-.63754-.76819-.9975-.60608-2.66815 1.20166-1.49149 1.61389-1.6496 1.69634-3.45812 1.80318l-1.89517.11198zm-14.16803-22.50144c3.32201-.23554 11.25456-.22143 26.40954.047 11.91373.21101 22.34809.28066 23.18747.15479 1.16841-.17521 1.50196-.35442 1.42298-.76456-.0567-.29463-.47079-.63798-.9201-.76301-1.2189-.33915-42.11453-.31723-49.14741.0264-6.154617.30067-7.829188.51507-7.829188 1.00238 0 .27055.733567.53964 1.637301.6006.27015.0182 2.627887-.11837 5.239407-.30354z" id="path4241"/><path style="display:inline;fill:#e96149;fill-opacity:1;stroke:#000;stroke-width:.495059;-inkscape-stroke:none;stop-color:#000" d="M87.463232 150.83584c-.404647-.94062-.639597-1.80642-.522117-1.92401.323-.3233 46.124865-.46428 65.606295-.20194l17.14629.23089-.18616 1.14718c-.10239.63094-.27921 1.23943-.39293 1.3522-.11372.11276-10.61925.16359-23.34562.11295-20.85271-.083-41.60632.22337-53.289195.78658l-4.280856.20637z" id="path4280"/></g></g><g id="g33196" style="display:inline"><path d="M206.36037 182.08369c4.181-.46747-4.0821-2.42062 2.25018-2.42062 5.91023 0 5.70798.81482 7.22749 2.37949.88389.91016-4.58153.69226-9.47767.0411zm-15.46705-6.59c-.97163-.96944-1.07716-2.57204-.16938-2.57204.35456 0 .92633.50217 1.27058 1.11593.63124 1.12542 2.0152 1.09537 7.92125-.17202 2.66664-.57223 1.49683.62887-1.62759 1.67112-2.99919 1.00048-6.36867.98089-7.39486-.043zm17.20376-1.45213c0-.37227.47593-.67686 1.0576-.67686.58169 0 .86894.30459.63834.67686-.23059.37227-.70651.67686-1.05761.67686-.35108 0-.63833-.30459-.63833-.67686zm1.60057 3.70417c.23059-.37227 1.61222-2.26436 1.77675-2.26436.16453 0-.75918 1.89209-.75918 2.26436 0 .37227-.32329.67686-.71842.67686-.39512 0-.52975-.30459-.29915-.67686zm-10.12108.0837c-.10012-.89442 2.76224-2.07128 3.89809-1.92089.60031.0794-.66904 2.12925-2.64646 3.10483-.28261.13942-1.19647-.69136-1.25163-1.18394z" style="display:inline;fill:#000;stroke-width:.140008" id="path33192"/><path style="fill:#000;fill-opacity:1;stroke:none;stroke-width:.264582px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" d="M204.70967 148.98848c.77636-.15586 1.55272-.31173 2.32908-.46759-.26313 8.90449-.75611 17.69406 0 27.10817-1.40751-.73058-1.84904-.30199-2.39608 0 .0288-8.88345.36213-17.91911.067-26.64058z" id="path33190"/><path d="M228.54651 134.96892c-.97566-1.531-3.14055-1.44607-4.76403-1.70774-12.98036-.81013-25.97127-1.48177-38.97235-1.88747-.78426-.42228-2.83205.51436-1.08292.97974 10.74129.91664 21.50967 1.47224 32.27083 2.09742" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path56244"/><path d="M227.01415 149.71403c-1.86908-.1811-3.72558-.57239-5.61237-.62545-12.4622-.84676-24.93403-1.58416-37.41915-2.03386-1.01601-.52062-2.66615.95402-.79197.98761 12.32595 1.06876 24.67585 1.83698 37.02595 2.56576 2.23261.0602 4.48626.38041 6.71535.005l.16189-.0812.10307-.10423" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path56510"/><path d="M183.74362 131.48721c-.39215.35605-1.47063.73425-1.42663 1.35454-1.20136 1.60145-4.75097 4.00484-4.82263 5.83297-.55661 2.2418 4.52466 6.39667 4.86402 9.04742.13922.76058 1.3158.32678 1.08754-.39593.38504-3.5495-.76357-4.89123-.56903-8.4554.0529-1.36942 1.50696-4.96703 1.44213-6.33715" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path56822"/><path d="M227.30862 150.77825c.65427.17809.94559-.45065.89899-1.00012.27288-3.34811.33555-6.70955.40249-10.06691.005-1.58019.0711-3.16624-.0636-4.7423-.33393-.71809-.80419.1214-.9001.61141-.69974 3.5749-.63175 7.25799-.844 10.89377-.0513 1.37986-.19192 2.76592-.0669 4.14435.009.21119-.17317-.006-.26483.016" style="display:inline;fill:#000;fill-opacity:1;stroke:none;stroke-width:.130984;-inkscape-stroke:none;stop-color:#000" id="path57075"/><g aria-label="Office" id="text96922" style="font-size:10.5833px;line-height:1.25;font-family:Lato;-inkscape-font-specification:Lato;text-align:center;letter-spacing:0;text-anchor:middle;stroke-width:.264583" transform="rotate(3.969 -112.57327 302.80323)"><path d="M180.56737 123.04782q-1.52962 0-2.60449-.87849-1.14721-.94051-1.14721-2.43396 0-1.75699 1.1007-3.20392 1.23507-1.62781 3.11092-1.62781 1.8035 0 2.70266.82682.89917.82682.89917 2.48563 0 1.75699-1.01285 3.18326-1.16789 1.64847-3.0489 1.64847zm.45992-6.74375q-1.15238 0-1.97404 1.11621-.76997 1.04386-.76997 2.31509 0 .85783.66662 1.39526.64079.51677 1.61747.51677 1.13688 0 1.89652-1.11621.69763-1.01802.69763-2.3151 0-1.0852-.48576-1.50895-.46509-.40307-1.64847-.40307z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111278"/><path d="M187.94157 117.42544q.69246-.062.99218-.062.96635 0 .96635.66146 0 .68213-1.02836.65112-.32556-.0103-.98701.0465-.0207.54777-.0103 1.39526.0207 1.21956.0207 1.39009 0 .94568-.11885 1.49861-.11886.55294-.68213.55294-.28939 0-.50643-.18604-.21187-.18603-.21187-.47025 0-.0672.0103-.12919.12403-.73897.12403-1.39009v-2.58382q-.093.005-.34107.0413-.19637.0258-.29972.0258-.31522 0-.52193-.18086-.2067-.18604-.2067-.4961 0-.48059.50642-.63045.22738-.0672.90434-.0878.005-.093.0672-.58394.14469-1.15238.62528-1.71565.59945-.7028 1.83968-.7028.94567 0 .94567.67696 0 .67179-.8785.67179-.62528 0-.9095.43925-.21187.32556-.28422 1.01802z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111280"/><path d="M193.3159 117.42544q.69246-.062.99219-.062.96634 0 .96634.66146 0 .68213-1.02835.65112-.32556-.0103-.98702.0465-.0207.54777-.0103 1.39526.0207 1.21956.0207 1.39009 0 .94568-.11885 1.49861-.11886.55294-.68213.55294-.28939 0-.50643-.18604-.21187-.18603-.21187-.47025 0-.0672.0103-.12919.12402-.73897.12402-1.39009v-2.58382q-.093.005-.34106.0413-.19637.0258-.29973.0258-.31522 0-.52193-.18086-.2067-.18604-.2067-.4961 0-.48059.50643-.63045.22737-.0672.90433-.0878.005-.093.0672-.58394.14469-1.15238.62528-1.71565.59945-.7028 1.83968-.7028.94567 0 .94567.67696 0 .67179-.87849.67179-.62529 0-.9095.43925-.21188.32556-.28422 1.01802z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111282"/><path d="M197.41383 116.52111q-.33073 0-.57361-.22221-.24288-.22221-.24288-.5426 0-.32039.24288-.5426.24288-.22221.57361-.22221.33073 0 .56844.22221.24288.22221.24288.5426 0 .32039-.24288.5426-.23771.22221-.56844.22221zm.43925 3.78787q0 .29456.0155.94568.0207.65112.0207.94567 0 .29972-.20154.49609-.20153.19121-.51159.19121t-.5116-.19121q-.20153-.19637-.20153-.49609 0-.29455-.0207-.94567-.0155-.65112-.0155-.94568 0-.45992.0517-1.15238t.0517-1.15238q0-.29972.20153-.49093.20154-.19637.5116-.19637.31006 0 .51159.19637.20154.19121.20154.49093 0 .45992-.0517 1.15238t-.0517 1.15238z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111284"/><path d="M201.58927 123.05816q-1.13687 0-1.90685-.64596-.81132-.68212-.81132-1.79833 0-1.02836.72864-2.12389.82682-1.25057 1.92235-1.25057.53744 0 1.25574.28939.87333.35656.87333.82165 0 .25321-.1757.44958-.18604.21188-.48059.21188-.22221 0-.53743-.23771-.31006-.24288-.93535-.24288-.3979 0-.86299.78031-.44442.75447-.44442 1.30224 0 .5426.39274.85266.37207.29455.98185.29455.34623 0 .84749-.26355.50126-.26354.63562-.26354.27905 0 .47542.20153.20154.20154.20154.45992 0 .40308-.87849.80615-.78548.35657-1.28158.35657z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111286"/><path d="M207.25299 122.97031q-1.23506 0-2.02054-.58911-.86816-.65112-.86816-1.83451 0-1.30741.68729-2.21174.76481-1.00252 2.06189-1.00252.89916 0 1.49344.28938.78031.38241.78031 1.18856 0 .56844-.63562 1.00769-.28938.20153-1.16271.58911l-1.74149.76997q.24804.26872.59944.40308.3514.13435.80615.13435.69246 0 1.17305-.28421.42892-.25322.6873-.25322.53743 0 .53743.52193 0 .58911-.86299.96118-.72347.31006-1.53479.31006zm-.13952-4.38732q-.48059 0-.82166.3204-.34106.32039-.54777.96117.58395-.25321 1.16272-.50126.69763-.31522 1.11104-.58394-.34623-.19637-.90433-.19637z" style="font-weight:700;font-family:'Comic Sans MS';-inkscape-font-specification:'Comic Sans MS Bold'" id="path111288"/></g></g><g id="g17282" style="display:inline" transform="translate(.61359839 -3.4077051)"><g id="g28410" transform="matrix(1.2155 0 0 1.2155 -3.7905869 -5.5683796)"><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M19.016225 23.059374c-3.63094-.445314-8.788822-.159609-10.8040514 3.43252-2.8856808 5.143705-.9539108 9.080185 0 12.308178" id="path17212"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M34.268926 60.598348c3.071014 2.102726 8.452328 5.330485 11.766151 2.728165 4.745186-3.726358 8.225919-7.807711 8.723188-11.414479" id="path17214"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M9.9657963 34.504156c-2.6809038 2.488933-5.2303447 4.965497-3.783025 8.821637 2.0724703 5.521748 6.3272297 6.582237 9.4100147 7.933653" id="path17216"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M36.529224 59.342848c-.93487 2.962959-1.336075 6.569255-7.415403 6.388504-3.027112-.09-6.710252-2.310979-12.13315-6.729684-4.358609-3.551498-6.810142-7.24033-6.311107-11.4316" id="path17218"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M50.479053 53.999239c5.206992.497668 9.243228 1.22811 12.133194-2.786333 4.13826-5.748429 1.367975-10.147706 0-13.755204" id="path17220"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M37.290784 15.33678c-3.101115-1.940395-7.921842-3.651541-11.881464-2.51755-7.4194 2.124831-8.307977 9.015624-8.801424 12.348296" id="path17222"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M35.02514 16.888937c.934865-2.96296 1.336068-6.569255 7.415398-6.388504 3.027111.09 6.710249 2.310978 12.133148 6.729684 4.35861 3.551498 6.810143 7.24033 6.311107 11.4316" id="path17224"/><path style="font-variation-settings:normal;display:inline;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.427885;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000" d="M62.88418 41.900036c2.680901-2.488933 6.971605-6.960031 5.524282-10.81617-2.072469-5.521749-6.327223-6.582238-9.410007-7.933654" id="path17226"/></g><circle style="font-variation-settings:normal;display:inline;opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000;stop-opacity:1" id="circle17228" cx="60.774353" cy="71.804581" r="3.506027"/><circle style="font-variation-settings:normal;display:inline;opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000;stop-opacity:1" id="circle17230" cx="72.954475" cy="81.202171" r="1.719918"/><circle style="font-variation-settings:normal;display:inline;opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000;stroke-width:.443257;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000;stop-opacity:1" id="circle17232" cx="67.191223" cy="77.519432" r="2.4290087"/><g aria-label="Relax, Jürgen will help us ..." id="text19368" style="font-style:italic;font-size:11.6417px;line-height:1.25;font-family:Lato;-inkscape-font-specification:'Lato Italic';text-align:center;letter-spacing:0;text-anchor:middle;stroke-width:.264583" transform="translate(2.1166667 2.6458334)"><path d="m25.615759 20.326809-.430743 3.498331h-1.082678l1.018649-8.341278h2.19446q.663577 0 1.146707.1397.488952.139701.803278.401639.320146.256118.471489.628652.157163.366713.157163.82074 0 .506414-.151343.942977-.151342.436564-.436563.785815-.285222.34343-.686861.587906-.401638.238655-.908052.355072.186267.128059.308505.349251l1.798642 3.329526h-.966261q-.285221 0-.407459-.232834l-1.57163-3.003559q-.07567-.145521-.174625-.203729-.09896-.05821-.314326-.05821zm.494772-3.987282-.395818 3.195647h1.065216q.494772 0 .873127-.139701.378356-.1397.634473-.389997.261938-.256117.389997-.599547.133879-.349251.133879-.762532 0-.634472-.401638-.966261-.395818-.337609-1.193274-.337609z" id="path45859"/><path d="M35.479189 19.191743q0 .384177-.157163.710144-.157163.320147-.576264.582085-.419101.256118-1.152529.448206-.733427.192088-1.885955.308505-.0058.06403-.0058.128058v.122238q0 .779994.33761 1.193274.34343.40746 1.03029.40746.279401 0 .494772-.05821.221193-.05821.389997-.1397.174626-.08731.302684-.186267.13388-.104775.244476-.186267.110596-.08731.20373-.145522.09313-.05821.186267-.05821.104775 0 .192088.09895l.256117.320147q-.296863.308505-.582085.529697-.2794.215372-.576264.360893-.296863.145521-.622831.209551-.320146.06985-.692681.06985-.506414 0-.908052-.168805-.401639-.168804-.68104-.477309-.279401-.314326-.430743-.756711-.151342-.442385-.151342-.989544 0-.454027.09313-.902232.09895-.454026.279401-.861486.186267-.407459.448205-.75671.267759-.349251.605368-.599548.343431-.256117.75089-.401639.41328-.145521.884769-.145521.448206 0 .774173.128059.325968.128059.535519.325967.20955.197909.308505.436564.104775.238655.104775.454026zm-1.78118-.599547q-.366714 0-.675219.151342-.308505.151342-.54716.419101-.238655.261938-.407459.622831-.168805.355072-.261938.768352.89641-.110596 1.43775-.250296.541339-.145521.832381-.308505.291043-.168805.384176-.360893.09313-.192088.09313-.401639 0-.104775-.04657-.215371-.04657-.116417-.151342-.209551-.09895-.09313-.261938-.151342-.162984-.06403-.395818-.06403z" id="path45861"/><path d="m36.22935 23.82514 1.041933-8.574112h1.018648l-1.041932 8.574112z" id="path45863"/><path d="M43.240928 23.82514h-.535518q-.20373 0-.279401-.104775-.06985-.104776-.06985-.256118l.104775-1.193274q-.20955.372534-.454026.675219-.238655.302684-.512235.518055-.267759.209551-.564622.325968-.296863.116417-.61701.116417-.349251 0-.634473-.13388-.285221-.1397-.488951-.401638-.197909-.267759-.308505-.651935-.110596-.389997-.110596-.890591 0-.523876.128058-1.018648.13388-.500593.372535-.942978.244475-.442385.582085-.809098.337609-.372534.750889-.640294.419102-.273579.896411-.419101.47731-.151342 1.001186-.151342.378356 0 .733428.06403.360892.05821.710143.20955zm-2.53789-.779994q.285221 0 .558801-.174625.27358-.180447.518056-.494773.244476-.314326.454026-.745068.215372-.436564.378356-.95462l.250296-2.025656q-.128059-.0291-.256117-.03493-.122238-.01164-.244476-.01164-.349251 0-.675219.116417-.325967.110596-.611189.314326-.285221.203729-.518055.488951-.232834.279401-.401639.61701-.162984.337609-.256117.721785-.09313.378356-.09313.779994 0 1.402825.896411 1.402825z" id="path45865"/><path d="m46.475685 20.652777-1.414467-2.724158h.925515q.116417 0 .162984.03492.05239.0291.09313.110596l.989544 2.025656q.0291-.06403.05821-.122238.03493-.05821.08149-.122238l1.332974-1.763717q.06403-.08149.116417-.122238.05239-.04075.128059-.04075h.937157l-2.107148 2.729979 1.57163 3.166542h-.925516q-.116417 0-.180446-.05821-.06403-.06403-.104775-.145522l-1.111783-2.357444q-.05821.128059-.122237.221192l-1.606555 2.142073q-.05821.08149-.128059.139701-.06985.05821-.174625.05821h-.908053z" id="path45867"/><path d="M50.128268 23.109175q0-.273579.186267-.465668.192088-.192088.506414-.192088.174625 0 .308505.06403.133879.06403.221192.180446.09313.110596.139701.261938.04657.145522.04657.320147 0 .261938-.07567.54716-.06985.279401-.215371.552981-.139701.279401-.34343.541339-.20373.261938-.465668.48313l-.180447-.168804q-.07567-.06985-.07567-.162984 0-.06985.09313-.180446.09313-.110597.215371-.26776.122238-.151342.232834-.355071.116417-.197909.157163-.442385h-.06985q-.302684 0-.494772-.197909-.186267-.20373-.186267-.518056z" id="path45869"/><path d="M16.326228 35.612361q-.168805 1.385362-.867307 2.12461-.692681.733427-1.845209.733427-.314326 0-.587906-.04075-.27358-.04075-.55298-.122237l.08149-.634473q.01164-.08731.06403-.151342.05821-.06403.174625-.06403.05821 0 .13388.01746.07567.01164.168804.03492.09896.01746.221193.03493.128058.01164.291042.01164.302684 0 .570444-.09896.267759-.09895.48313-.325967.215372-.227013.360893-.593727.151342-.366713.215371-.902232l.68104-5.599657h1.088499z" id="path45871"/><path d="m19.314689 32.480744-.442385 3.748627q-.01164.116417-.02328.221192-.0058.104776-.0058.20373 0 .47731.174625.710144.180447.232834.564623.232834.267759 0 .54716-.145521.285221-.145522.54716-.413281.267759-.267759.494772-.646114.227013-.378355.395818-.844023l.366713-3.067588h1.030291l-.710144 5.896521h-.512235q-.180446 0-.279401-.08149-.09895-.08149-.09895-.250297 0-.0058.0058-.104775.0058-.09895.01164-.215371.01164-.116417.01746-.215372.01164-.09895.01164-.104775l.04075-.471489q-.471489.75089-1.053574 1.140887-.582085.384176-1.199095.384176-.657756 0-1.02447-.448206-.360892-.448205-.360892-1.286408 0-.116417.0058-.238654.0058-.122238.02328-.256118l.442384-3.748627zm1.082678-1.746255q0 .133879-.05239.250296-.05239.116417-.145521.20373-.09313.08731-.215371.139701-.116417.05239-.250297.05239t-.250297-.05239q-.116417-.05239-.203729-.139701-.08731-.08731-.139701-.20373-.05239-.116417-.05239-.250296 0-.13388.05239-.256118.05239-.122237.139701-.20955.08731-.09313.203729-.145521.116417-.05239.250297-.05239t.250297.05239q.122237.05239.215371.145521.09313.08731.145521.20955.05239.122238.05239.256118zm2.089685 0q0 .133879-.05239.250296-.05239.116417-.145521.20373-.08731.08731-.20955.139701-.116417.05239-.250297.05239t-.256117-.05239q-.116417-.05239-.20373-.139701-.08731-.08731-.139701-.20373-.05239-.116417-.05239-.250296 0-.13388.05239-.256118.05239-.122237.139701-.20955.08731-.09313.20373-.145521.122237-.05239.256117-.05239t.250297.05239q.122237.05239.20955.145521.09313.08731.145521.20955.05239.122238.05239.256118z" id="path45873"/><path d="m23.783828 38.377265.710144-5.902342h.518055q.162984 0 .256118.07567.09313.07567.09313.232834 0 .02328-.0058.06985 0 .04075-.0058.08731 0 .04657-.0058.08149v.04075l-.08149 1.071036q.378355-.814919.844023-1.257303.471489-.442385.989545-.442385.244475 0 .488951.104775l-.186267.995366q-.27358-.110597-.529697-.110597-.564623 0-1.007007.552981-.442385.54716-.739248 1.664763l-.325968 2.7358z" id="path45875"/><path d="M32.213146 34.116403q-.0058.291042-.07567.523876-.06403.232834-.162984.430743-.09895.197909-.215371.372534-.116417.174626-.215372.349251-.09895.174626-.168804.360893-.06403.180446-.06403.395818 0 .244476.116417.442384.122238.197909.261939.40746.145521.209551.261938.459847.122238.244476.122238.582085 0 .41328-.192088.779994-.192088.372534-.54716.657756-.355072.285222-.867307.448205-.506414.168805-1.140886.168805-.506414 0-.925516-.104775-.41328-.104775-.710143-.296864-.291043-.192088-.448206-.465668-.162983-.267759-.162983-.593726 0-.459847.238654-.791636.238655-.331788.628652-.54716.389997-.215371.884769-.314326.500593-.09895 1.018649-.09895.209551 0 .41328.01746.209551.01746.413281.04657-.05239-.110596-.08731-.227013-.0291-.122238-.0291-.261938 0-.180446.05239-.372534.05821-.192089.186268-.430743-.221193.151342-.494773.232834-.27358.08149-.622831.08149-.337609 0-.634472-.110597-.291043-.110596-.512235-.325967-.221192-.215372-.349251-.535518-.128059-.325968-.128059-.756711 0-.419101.151342-.82074.157163-.407459.454027-.721785.296863-.320147.733427-.512235.436564-.192088 1.007007-.192088.640293 0 1.111782.302684h1.600734l-.04657.34343q-.01164.09896-.06985.180447-.05239.08149-.162984.09895l-.733427.128059q.05239.151342.08149.320147.0291.162983.0291.349251zm-2.246848 1.600733q.314326 0 .552981-.133879.238655-.139701.401638-.360893.168805-.227013.256118-.506414.08731-.279401.08731-.564622 0-.512235-.261939-.774173-.256117-.261939-.710143-.261939-.314326 0-.552981.128059-.238655.128059-.401639.34343-.162983.215372-.250296.488952-.08149.27358-.08149.570443 0 .523876.250296.797456.256118.27358.710144.27358zm1.16417 2.80565q0-.151342-.0291-.279401-.0291-.133879-.07567-.250296-.314326-.05239-.593727-.07567-.27358-.02328-.518056-.02328-.477309 0-.82656.08731-.349251.08149-.576264.221192-.227014.139701-.33761.320147-.110596.186267-.110596.384176 0 .419101.349251.640294.355072.221192 1.001186.221192.384176 0 .698502-.104775.320147-.09896.541339-.26776.227014-.168804.349251-.395817.128059-.227013.128059-.47731z" id="path45877"/><path d="M38.003073 33.743868q0 .384176-.157163.710144-.157163.320147-.576264.582085-.419101.256117-1.152528.448205-.733428.192088-1.885956.308505-.0058.06403-.0058.128059v.122238q0 .779994.33761 1.193274.34343.40746 1.03029.40746.279401 0 .494772-.05821.221193-.05821.389997-.1397.174626-.08731.302684-.186267.13388-.104776.244476-.186268.110596-.08731.20373-.145521.09313-.05821.186267-.05821.104775 0 .192088.09895l.256118.320147q-.296864.308505-.582085.529697-.279401.215372-.576265.360893-.296863.145521-.622831.20955-.320146.06985-.692681.06985-.506414 0-.908052-.168805-.401639-.168805-.68104-.47731-.279401-.314326-.430743-.75671-.151342-.442385-.151342-.989545 0-.454026.09313-.902231.09895-.454027.279401-.861486.186267-.40746.448205-.756711.267759-.349251.605369-.599547.34343-.256118.750889-.401639.41328-.145521.884769-.145521.448206 0 .774173.128059.325968.128058.535519.325967.20955.197909.308505.436564.104775.238655.104775.454026zm-1.78118-.599547q-.366714 0-.675219.151342-.308505.151342-.54716.419101-.238654.261938-.407459.622831-.168805.355072-.261938.768352.896411-.110596 1.43775-.250296.541339-.145522.832381-.308505.291043-.168805.384176-.360893.09313-.192088.09313-.401639 0-.104775-.04657-.215371-.04657-.116417-.151342-.209551-.09896-.09313-.261938-.151342-.162984-.06403-.395818-.06403z" id="path45879"/><path d="m38.654281 38.377265.704323-5.902342h.518055q.349251 0 .349251.349251l-.08731 1.140887q.471489-.779994 1.059394-1.175812.593727-.395818 1.2282-.395818.657756 0 1.018648.442385.366714.442384.366714 1.292228 0 .116417-.0058.238655t-.02328.256118l-.442385 3.754448H42.30398l.442384-3.754448q.01164-.116417.01746-.221193.01164-.110596.01164-.20955 0-.47731-.180447-.704323-.174625-.232834-.55298-.232834-.279401 0-.570444.151342-.285221.151342-.55298.430743-.267759.27358-.500593.669398-.227014.389997-.389997.873127l-.33761 2.997738z" id="path45881"/><path d="M47.079959 32.480744h.774173q.116417 0 .186268.05821.07567.05821.08731.157163l.541339 3.795194q.0291.20373.0291.395818.0058.186267.01164.372535.06985-.186268.139701-.372535.07567-.192088.157163-.395818l1.612375-3.818477q.03493-.08731.110596-.145521.08149-.05821.180447-.05821h.430742q.116417 0 .180447.05821.06403.05821.07567.145521l.657756 3.818477q.03493.20373.05239.395818.02328.192088.04075.384176.05821-.186267.110597-.378355.05821-.197909.1397-.401639l1.490138-3.795194q.03493-.09313.116417-.151342.08149-.06403.186267-.06403h.745069l-2.473862 5.896521h-.785812q-.13388 0-.168805-.197909l-.715965-3.998925q-.01746-.09313-.0291-.186267-.01164-.09896-.02328-.192088-.0291.09895-.05821.192088-.0291.09313-.06985.192088l-1.705509 3.993103q-.08149.197909-.232834.197909h-.75671z" id="path45883"/><path d="m57.144028 32.480744-.710144 5.896521h-1.018649l.710144-5.896521zm.389997-1.85103q0 .151342-.06403.285221-.05821.128059-.162983.232834-.09896.09896-.227014.157163-.128058.05821-.267759.05821-.133879 0-.261938-.05821t-.227013-.157163q-.09313-.104775-.151342-.232834-.05821-.133879-.05821-.285221 0-.151343.05821-.285222.05821-.13388.157163-.232834.09895-.104775.227013-.162984.128059-.06403.261938-.06403.139701 0 .267759.05821.128059.05821.227013.162984.104776.09895.162984.238655.05821.133879.05821.285222z" id="path45885"/><path d="m58.216702 38.377265 1.041932-8.574112h1.018649l-1.041932 8.574112z" id="path45887"/><path d="m60.9907 38.377265 1.041932-8.574112h1.018649l-1.041932 8.574112z" id="path45889"/><path d="m16.884029 52.929389 1.036112-8.574111h1.036111l-.483131 3.981461q.459847-.68686 1.018649-1.036111.564622-.355072 1.152528-.355072.669398 0 1.030291.442384.360892.442385.360892 1.286408 0 .116417-.0058.244476-.0058.122238-.02328.256117l-.442384 3.754448h-1.036112l.442385-3.754448q.01164-.116417.01746-.221192.01164-.110596.01164-.209551 0-.477309-.180446-.710143-.174626-.232834-.558802-.232834-.261938 0-.541339.145521-.27358.1397-.535518.401639-.261938.261938-.488951.634472-.227014.366714-.395818.82074l-.378355 3.125796z" id="path45891"/><path d="M27.714266 48.295993q0 .384176-.157163.710144-.157163.320146-.576264.582085-.419101.256117-1.152528.448205-.733427.192088-1.885956.308505-.0058.06403-.0058.128059v.122238q0 .779994.337609 1.193274.34343.407459 1.03029.407459.279401 0 .494773-.05821.221192-.05821.389997-.139701.174625-.08731.302684-.186267.133879-.104775.244475-.186267.110597-.08731.20373-.145521.09313-.05821.186267-.05821.104776 0 .192088.09896l.256118.320147q-.296864.308505-.582085.529697-.279401.215371-.576264.360893-.296864.145521-.622831.20955-.320147.06985-.692681.06985-.506414 0-.908053-.168804-.401639-.168805-.681039-.47731-.279401-.314326-.430743-.75671-.151342-.442385-.151342-.989545 0-.454026.09313-.902232.09896-.454026.279401-.861485.186267-.40746.448205-.756711.26776-.349251.605369-.599547.34343-.256118.750889-.401639.413281-.145521.88477-.145521.448205 0 .774173.128058.325967.128059.535518.325968.20955.197909.308505.436564.104775.238655.104775.454026zm-1.78118-.599548q-.366713 0-.675218.151343-.308506.151342-.54716.419101-.238655.261938-.40746.622831-.168805.355071-.261938.768352.896411-.110596 1.43775-.250297.541339-.145521.832381-.308505.291043-.168804.384176-.360892.09313-.192088.09313-.401639 0-.104775-.04657-.215372-.04657-.116417-.151342-.20955-.09895-.09313-.261938-.151342-.162984-.06403-.395818-.06403z" id="path45893"/><path d="m28.464428 52.929389 1.041932-8.574111h1.018649l-1.041932 8.574111z" id="path45895"/><path d="m30.889176 54.925941.96044-7.898893h.518055q.349251 0 .349251.349251l-.09895 1.257303q.221192-.384176.48313-.692681.261939-.314326.54716-.535518.291043-.221192.605369-.337609.314326-.122238.640293-.122238.75089 0 1.169991.54716.419101.54716.419101 1.600733 0 .47731-.09895.95462-.09896.477309-.285222.913873-.180446.430743-.442384.809098-.256118.372535-.576265.651936-.314325.273579-.68686.430742-.372534.157163-.779994.157163-.436563 0-.797456-.168804-.360893-.174626-.605369-.494773l-.314325 2.578637zm3.614747-7.148004q-.279401 0-.570443.174626-.285222.174625-.552981.488951-.267759.314326-.500593.745069-.227013.430743-.395818.937157l-.186267 1.501779q.221192.320147.529698.454026.314325.128059.634472.128059.302684 0 .570443-.128059.26776-.128058.488952-.34343.221192-.221192.395818-.512235.174625-.296863.291042-.628651.122238-.33761.186267-.692681.06403-.360893.06403-.710144 0-.692681-.250297-1.053574-.250296-.360893-.704323-.360893z" id="path45897"/><path d="m41.063294 47.032869-.442384 3.748627q-.01164.116417-.02328.221192-.0058.104775-.0058.20373 0 .47731.174626.710144.180446.232834.564622.232834.267759 0 .54716-.145522.285222-.145521.54716-.41328.267759-.267759.494772-.646114.227014-.378356.395818-.844024l.366714-3.067587h1.03029l-.710144 5.89652h-.512234q-.180447 0-.279401-.08149-.09895-.08149-.09895-.250297 0-.0058.0058-.104775.0058-.09896.01164-.215372.01164-.116417.01746-.215371.01164-.09896.01164-.104775l.04075-.471489q-.471489.750889-1.053574 1.140886-.582085.384176-1.199095.384176-.657756 0-1.024469-.448205-.360893-.448206-.360893-1.286408 0-.116417.0058-.238655t.02328-.256117l.442385-3.748627z" id="path45899"/><path d="M49.327628 47.975846q-.04657.06985-.09313.104776-.04657.0291-.116417.0291-.08149 0-.180446-.06403-.09313-.06403-.232834-.1397-.13388-.08149-.331789-.145521-.197909-.06985-.477309-.06985-.261939 0-.47731.07567-.215372.06985-.372534.197909-.157163.128058-.244476.302684-.08149.168804-.08149.360892 0 .27358.180446.436564.180447.162984.454027.285222.27358.116417.587905.227013.320147.110596.593727.279401.27358.168804.454026.430743.180447.261938.180447.681039 0 .40746-.162984.779994-.157163.372534-.459847.657756-.296864.279401-.721786.448205-.419101.168805-.942977.168805-.564623 0-1.001186-.197909-.430743-.20373-.704323-.518055l.256117-.395818q.04657-.07567.110596-.116417.06403-.04075.162984-.04075.09313 0 .186267.08149.09313.08149.232834.186267.139701.09895.349251.180446.215372.08149.541339.08149.285222 0 .512235-.08731.232834-.08731.389997-.232834.162984-.145521.244476-.337609.08731-.197909.08731-.419101 0-.296863-.180446-.471489-.180446-.174625-.454026-.291042-.27358-.116417-.587906-.215372-.314326-.104775-.587906-.261938-.27358-.162984-.454026-.419101-.180447-.256118-.180447-.68104 0-.372534.145522-.715964.151342-.349251.430743-.61701.2794-.267759.675218-.424922.401639-.162984.902232-.162984.529697 0 .931336.180446.407459.174626.698502.47731z" id="path45901"/><path d="M52.156923 52.289096q0-.151342.05239-.285222.05821-.133879.157163-.232834.09896-.09895.227013-.157163.13388-.05821.291043-.05821.151342 0 .279401.05821.133879.05821.232834.157163.09895.09896.157163.232834.05821.13388.05821.285222 0 .157163-.05821.291042-.05821.128059-.157163.227014-.09895.09895-.232834.151342-.128059.05821-.279401.05821-.157163 0-.291043-.05821-.128058-.05239-.227013-.151342-.09895-.09896-.157163-.227014-.05239-.133879-.05239-.291042z" id="path45903"/><path d="M54.635331 52.289096q0-.151342.05239-.285222.05821-.133879.157163-.232834.09896-.09895.227013-.157163.13388-.05821.291043-.05821.151342 0 .279401.05821.133879.05821.232834.157163.09895.09896.157162.232834.05821.13388.05821.285222 0 .157163-.05821.291042-.05821.128059-.157162.227014-.09895.09895-.232834.151342-.128059.05821-.279401.05821-.157163 0-.291043-.05821-.128058-.05239-.227013-.151342-.09895-.09896-.157163-.227014-.05239-.133879-.05239-.291042z" id="path45905"/><path d="M57.11374 52.289096q0-.151342.05239-.285222.05821-.133879.157163-.232834.09895-.09895.227013-.157163.13388-.05821.291043-.05821.151342 0 .2794.05821.13388.05821.232834.157163.09896.09896.157163.232834.05821.13388.05821.285222 0 .157163-.05821.291042-.05821.128059-.157163.227014-.09895.09895-.232834.151342-.128058.05821-.2794.05821-.157163 0-.291043-.05821-.128059-.05239-.227013-.151342-.09895-.09896-.157163-.227014-.05239-.133879-.05239-.291042z" id="path45907"/></g></g><script id="script28585" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script><script id="script22621" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script><script id="script27499" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script><script id="script113490" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script></svg>