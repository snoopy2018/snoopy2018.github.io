/* General ----------------------------------- */


*, *:after, *.before { /* whole website */
  box-sizing: border-box;
}

/* TYPOGRAPHY ----------------------------------- */

html {
  font-family:  PT Sans, Helvetica Neue, Helvetica, Arial, sans-serif;
  /*font-size: 17px;*/
  line-height: 1.5;
  letter-spacing: normal; /* -0.022em;  at some Apple websites */
}

body {
  font-size: 100%; /* recommended by "Learning Responsive Web Design" (\cite{Peterson:2014}, page 274), if you use em as relative measure (e.g., xyz: 1.5em); if you sue rem you shall set html { font-size: 100% }. Confused? ...me too. Also recommended by w3.css, CSS Fonts. */

  max-width: 56em;  /* 63em is a value adopted from "Learning Responsive Web Design" by Clarissa Peterson, p.131. I choose 56em (approximately 900px) because it looks good for videos at max-width = 340px. State of mind on November 24, 2019. */
  margin: auto; /* only if (?) max-width < 100%: needed to center web page */

  /* max-width: 100%; */ /* Apple HGI webpage */
  min-width: 20em; /* approximately 320px; e.g., Apple HGI webpage */
  overflow-x: hidden; /* Apple HGI webpage */
}

/* The following settings were inspired by Peterson's "Learning Responsive Web Design" section "Typography". */
p {
  font-size: 1em;
  line-height: 1.4;
  max-width: 44em; /* I feel text need to be limited to a certain width. 44em seems to be a good starting point. Note to center the text with margin: auto;
  top and bottom will I set later. All ul, ol elements shall have the same restrictions. State of mind on November 26, 2019. */
  margin: 0.5em auto;
}


/* h_(i-1) = h_(i) * 1.125, i = 1..6, h1 = 2em */
h1 {
  font-size: 2em;
}

h2 {
  font-size: 1.8em;
}

h3 {
  font-size: 1.6em;
}

h4 {
  font-size: 1.4em;
}

h5 {
  font-size: 1.2em;
}

h6 {
  font-size: 1.1em;
}

h1, h2, h3, h4, h5, h6 {
  text-align: center;
  margin: 1em auto 0 auto;
}

ul, ol {
  max-width: 44em; /* same as p element. State of mind on November 26, 2019. */
  margin: 0.5em auto;
}

.lead {
  color: #000;
  letter-spacing: 0em;
}

footer, header, nav, main, section {
    display: block;
}

header, section, footer {
  margin: 15px auto; /* Recommended for <article> by  Peterson, p. 285 */
  width: 94%; /* Recommended for <article> by  Peterson, p. 285 */
}

footer {
  border-top: 1px solid #ccc;
}

footer p {
  font-size: 0.618em; /* 1 / 1.618 (Golden Ratio), assume p: 1em */
  text-align: left;
  margin: auto 0;
}

img, video {
  max-width: 100%; /* don't scale larger than orignal size. */
}

video { /* allow video to shrink to min-width (can be watched on iPhone SE 320 X 568) */
  min-width: 200px;
}

a {
  color: #0070c9; /* Apple Developer HIG site: link color #0070c9 */
  text-decoration: none; /* no underline */
}

/* Responsive Grid  -------------------------------> */

/* Source based on: w3.com, How To, Responsive Image Grid */

.video-container {
  display: block;
  width: 100%;
  margin-left: auto; /* center items */
  margin-right: auto; /* center items */
}

.row {
  display: flex;
  flex-wrap: wrap;
  /*
  padding-top: 0;
  padding-right: 4px;
  */
}

/* Clear floats after the columns */
.row:after {
  content: "";
  display: table;
  clear: both;
}

/* Create two equal columns that sits next to each other */
.column {
  display: flex;
  margin: 0 auto; /* center column */
}

.column .video-container {
  flex: 50%; /* 50% = two columns */
  padding-top: 1em;
  padding-left: 2em;
  padding-right: 2em;
  padding-bottom: 1em;
}

#BEFORE.column .video-container {
  width: 100%;
  padding: 1em 1em;
}

.video-frame { /* settings make video centered in container */
  display: table;
  max-width: 21.25em; /* 21.25 * 16px = 340px is an arbitrary value but looks not too bad on iPhone 6 */ /* 90%; */  /* ... of video's intrinsic width (375px); 100% (375px) looks too bulky in my opinion. State of mind November 23, 2019. */
  /* margin: 0 auto; */ /* center video But decided not to do so. State of mind on Novemeber 21, 2019. */
  margin: 0 auto; /* center video */
}

.video-container >p {
  max-width: 21.25em; /* 90%; */ /* same percentage or pixels as in video-frame property; don't let text go beyond video frame */
}


/* <------------------------------  Responsive Grid */

/* Navigation -----------------------------------> */

/* Source based on: w3.com, How To, Responsive Topnav */

/* Add a black background color to the top navigation */
.topnav {
 background-color: #fff; /* #f0f0f0; */
 overflow: hidden;
 /* padding-right: 1em; */
 border-bottom: 1px solid #ccc;
}

/* Style the links inside the navigation bar */
.topnav a {
 float: right;
 display: block;
 color: #000;
 text-align: center;
 padding: 1em 1em;
 text-decoration: none;
 font-size: 1.1em;
 font-variant: small-caps;
 font-weight: 500;
}

/* Change the color of links on hover */
.topnav a:hover {
 /* background-color: #ddd; */
 opacity: 0.6;  /* I like it better than the bulky gray (setting background-colour above) */
 /* text-decoration: underline;*/ /* that's what WWF does (underline only). */
}

/* Add an active class to highlight the current page */
/* NOT needed since we stay always at the same page */
/*
.topnav a.active {
 background-color: #4CAF50;
 color: white;
}
*/

/* Hide the link that should open and close the topnav on small screens */
.topnav .icon {
 display: none;
 /* font-size: 1.1em; */ /* SAME as .topnav a { } */
}

.topnav ul {
  list-style-type: none;
  float: right;
  margin: 0;
  padding: 0;
}

.topnav ul li {
  float: left;
  margin: 0;
}
/* <------------------------------------ Navigation */


/* ----------------------------------------------------------------------- */
/* ------------------------     EXPERIMENTAL      ------------------------ */
/* ----------------------------------------------------------------------- */
.hamburgerIcon {
  display: inline-block; /* will alternate with crossIcon */
  width: 1.1em;
  height: 1.1em;
  background: url(../media/images/hamburgerPlain.svg);
  background-size: contain;
}

.crossIcon {
  display: none; /* will alternate with hamburgerIcon */
  width: 1.1em;
  height: 1.1em;
  background: url(../media/images/crossPlain.svg);
  background-size: contain;
}

.downloadIcon > svg {
  display: inline-block;
  width: 1em;
  height: 1em;
  position: relative;
  bottom: -0.1em; /* adjustment to position rleative to text (I don't know how to fix this positioning thing without this "bottom" hack at the moment. State of mind on November 29, 2019.) */
  fill: #0070c9; /* same color as link element (I don't know how to fix this color thing without this "fill" hack at the moment. It would be nicer to inherit color from the a element, but I guess my HTML/CSS architecture with this inline svg hack doesn't allow it.  State of mind on November 29, 2019.) */
}

.itemToSelect {
  color: #777;
  font-weight: 500;
}

#appLogo {
  float:left;
  margin-top: 1em;
  margin-right: 1em;
  margin-left: 0;
  margin-bottom: 1em;
}

.open-me-button {
  display: inline-block; /* sizes butto to size of content (thank yoy stackoverflow "Make button width fit to the text") */
  border: none;
  padding: 0.3em 1em;
  cursor: pointer;
  /* display: inline-block; */
  background-color: #f0f0f0;
  /* border: 1px solid #0070c9; */
  /*border-radius: 0.5em; */
  color: #0070c9; /* same as link element */
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.2);
  /* margin-left: 0.5em; */

}

.centerText {
  text-align:center;
}

.noScriptingWarning {
  text-align: center;
  border: 1px solid #ff0000;
}

.redBoldText {
  color: #ff0000;
  font-weight: bold;
}

.marker {
  background-color: #ff000022;
}

.video-border { /* only 1 pixel wide border in black ink; suppose to make the image appear as a unit distinguished from background. */
  border-radius: 0px;
  border-color: rgba(0, 0, 0, 0.4); /* #202020; */ /* choose a gray that is distinguishable on all background colors, except on itself */
  border-width: 1px; /* only 1 pixel wide, almost invisible, ot dominant */
  border-style: solid;
  /*filter: drop-shadow(1em 1em 1em #aaa);*/ /* values dpend on taste */
  /* filter: drop-shadow(0.5em 0.5em 1em rgba(0, 0, 0, 0.4) ); */
  box-shadow: 0 10px 6px -6px #777; /* Source: box-shadow. https://css-tricks.com/almanac/properties/b/box-shadow/ */
  /* box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); */ /* w3schools.com Product Card */
}

/* Based on Source: w3schools.com --------------------> */
/* Beautiful card examples at w3schools.com (e.g., Profile or Product Card) */
.card {
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.2);
  max-width: 10em;
  margin: auto;
  text-align: center;
  /*font-family: arial; */
}

.card img {
  padding: 0.7em;
}

.card .downloadButton {
  border: none;
  outline: 0;
  padding: 0.7em;
  color: #000; /*white;*/
  background-color: #f0f0f0;
  text-align: center;
  cursor: pointer;
  width: 100%;
}

.card .downloadButton:hover {
  opacity: 0.7;
}
/* <-------------------- Based on Source: w3schools.com */

.downloads-grid-container {
  display: grid;
  grid-gap: 1em;
  grid-template-columns: 1fr 1fr 1fr 1fr;
}

/* ----------------------------------------------------------------------- */
/* --------------------     MEDIA QUERIES (LAST)      -------------------- */
/* ----------------------------------------------------------------------- */

/* Source based on: w3.com, How To, Responsive Topnav

*/

@media only screen and (max-width: 700px) {
}

/* Source based on: w3.com, How To, Responsive Topnav
  The "responsive" class is added to the topnav with JavaScript when the user clicks on the icon. This class makes the topnav look good on small screens (display the links vertically instead of horizontally)

  NOTE: Rules below make only sense when Javascript is enabled. Worse,
  if Javascript is disabled and viewport below, for example 600px, the button function is not working and the user doesn't see menu at all. Unfortunatly, the media query @media (scripting: enabled) { } isn't supported by any browser yet.
  */

@media only screen and (max-width: 600px) {
  /* If the browser window is <max-width> or smaller then... */
  .javascript .topnav a {
    display: none;  /* don't show text but show...  */
  }

  .javascript .topnav a.icon {
    float: right;
    display: block; /* ... menu bar (hamburger symbol) */
  }

  /* NOTE
  Whenever user clicks on menu bar, class topnav get toggled between "topnav" and topnav.responsive.

  I added the cross symbol to differentiate between opening menu and closing it.

  See JavaScript toggleMenuBar().

  State of mind on November 26, 2019.

  */
  .javascript .topnav.responsive {
    position: relative;
  }
  .javascript .topnav.responsive .icon { /* a.icon or .icon (original) Statement/expression is not clear to me. */
    position: absolute;
    right: 0;
    top: 0;
  }
  .javascript .topnav.responsive a {
    float: none;
    display: block;
    text-align: left;
    /*   background-color: #fafafa; */
  }

  .javascript .topnav ul {
    float: left;
  }
  .javascript .topnav ul li {
    float: none;
  }
}

@media only screen and (max-width: 735px) {
  .downloads-grid-container {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

@media only screen and (max-width: 600px) {
    .downloads-grid-container {
      grid-template-columns: 1fr 1fr;
    }
}

@media only screen and (max-width: 800px) {
    .previews-grid-container {
      grid-template-columns: 1fr;
    }
}

/* Source based on: w3.com, How To, Responsive Image Grid
 Responsive layout - makes the two columns stack on top of each other instead of next to each other
 */
@media only screen and (max-width: 600px) {
  /* If the browser window is <max-width> or smaller then... */
  .column {
    display: block;
  }

  .column .video-container {
    max-width: 100%; /* fill entire column */
  }
}
